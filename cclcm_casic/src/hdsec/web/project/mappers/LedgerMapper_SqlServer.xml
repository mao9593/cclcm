<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hdsec.web.project.ledger.mapper.LedgerMapper">
	<select id="getAllCDLedgerList" resultType="entitycd"
		parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select distinct eb.conf_code, ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,jp.output_user_name,jp.output_dept_name,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,dp.dept_cs,sj_job.start_time, jp.send_way
			 from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status,output_user_name,output_dept_name, send_way from job_process) jp on(ed.job_code = jp.job_code)
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)	
			 left join (select event_code,conf_code from event_burn) eb on (eb.event_code = ed.event_code)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select barcode,job_code from event_senddestroy) sd_event on (sd_event.barcode = ed.cd_barcode)
			 left join (select job_code,job_status from job_process) sd_job on(sd_event.job_code = sd_job.job_code)
			 left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)
			 left join (select job_code,start_time from job_process) sj_job on(ed.job_code = sj_job.job_code)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="file_list != null and file_list != ''">
				<![CDATA[
				 and UPPER(ed.file_list) LIKE UPPER('%'+#{file_list}+'%')
				]]>
			</if>
            <if test="event_ids != null and event_ids != ''" >
				and ed.cd_barcode in 
				<foreach item="item" index="index" collection="event_ids" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			 <if test="barcodes != null and barcodes != ''" >
				and ed.cd_barcode in 
				<foreach item="item" index="index" collection="barcodes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and ed.duty_user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="user_id != null and user_id != ''">
				<![CDATA[
					and ed.user_iidd = #{user_id}
				]]>
			</if>
			<if test="output_undertaker != null and output_undertaker != ''">
				<![CDATA[
					and (ed.output_undertaker = #{output_undertaker} or ed.output_undertaker is null)
				]]>
			</if>
			<if test="is_burn_result">
				<![CDATA[
					and ed.cd_state in (0, 8, 9) 
				]]>
			</if>
			<if test="is_recycled">
				<![CDATA[
					and ed.cd_state =1
				]]>
			</if>
			<if test="is_sendes">
				<![CDATA[
					and ed.cd_state =1
				]]>
			</if>
			<if test="is_sendes_1">
				<![CDATA[
					and ed.cd_state =11
				]]>
			</if>
			<if test="is_retrieved">
				<![CDATA[
					and ed.cd_state = 11 and jp.job_status = 'true'
				]]>
			</if>
			<if test="is_retrieve">
				<![CDATA[
					and ed.cd_state = 0 and ed.job_code is null
				]]>
			</if>
			<if test="is_transfer">
				<![CDATA[
					and ed.cd_state = 0
				]]>
			</if>
			<if test="is_handle">
				<![CDATA[
					and ed.cd_state = 0
				]]>
			</if>
			<if test="data_type != null and data_type != ''">
   				<![CDATA[
			 		and ed.data_type = #{data_type}
				]]>
			</if>
			<if test="cd_barcode != null and cd_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
				]]>
			</if>
			<if test="send_num != null and send_num != ''">
   				<![CDATA[
			 		and UPPER(ed.send_num) LIKE UPPER('%'+#{send_num}+'%')
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_user_name) LIKE UPPER('%'+#{duty_user_name}+'%') 
				]]>
			</if>
			<if test="duty_user_iidd != null and duty_user_iidd != ''">
   				<![CDATA[
			 		and ed.duty_user_iidd = #{duty_user_iidd}
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and ed.user_name = #{user_name}
				]]>
			</if>
			<if test="dept_iidd != null and dept_iidd != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_iidd}
				]]>
			</if>
			<if test="dept_name != null and dept_name != ''">
   				<![CDATA[
			 		and ed.dept_name = #{dept_name}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
					 		and ed.retrieve_time >= #{start_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
					 		and ed.destroy_time >= #{start_time}
						]]>
					</when>
					<otherwise>
		   				<![CDATA[
					 		and ed.burn_time >= #{start_time}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="end_time != null and end_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
			 				and ed.retrieve_time <= #{end_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
			 				and ed.destroy_time <= #{end_time}
						]]>
					</when>
					<otherwise>
						<![CDATA[
			 				and ed.burn_time <= #{end_time}
						]]>
					</otherwise>
   				
				</choose>
			</if>
			<if test="cd_state != null and cd_state != ''">
				<choose>
					<when test="output_undertaker != null and output_undertaker != ''">
						<![CDATA[
			 				and (ed.cd_state = #{cd_state} or ed.cd_state=8)
						]]>
					</when>
					<otherwise>
						<![CDATA[
			 				and ed.cd_state = #{cd_state}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="has_job_code">
				<![CDATA[
					and ed.job_code is not null and ed.job_code != ''
				]]>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
			<if test="current_dept_id != null and current_dept_id != ''">
   				<![CDATA[
			 		and (ed.scope_dept_id = #{current_dept_id} or ed.scope_dept_id in (select dept_parent_id from sec_dept s_dept where s_dept.dept_id=#{current_dept_id}) or ed.scope_dept_id in(select br_dept_id from dept_open_scope dos where dos.dept_id=#{current_dept_id}))
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="scope_dept != null and scope_dept != ''">
   				<![CDATA[
			 		and ed.scope = #{scope_dept}
				]]>
			</if>
			<if test="scope_dept_id != null and scope_dept_id != ''">
   				<![CDATA[
			 		and ed.scope_dept_id = #{scope_dept_id}
				]]>
			</if>
			<if test="duty_dept_id != null and duty_dept_id != ''">
   				<![CDATA[
			 		and ed.duty_dept_id = #{duty_dept_id}
				]]>
			</if>
			<if test="dept_CS != null and dept_CS != ''">
				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{dept_CS}+'%'
							]]>
					</when>
					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{dept_CS}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="jobtype_code != null and jobtype_code != ''">
   				<![CDATA[
			 		and jp.jobtype_code = #{jobtype_code}
				]]>
			</if>
			<if test="create_type != null and create_type != ''">
   				<![CDATA[
			 		and ed.create_type = #{create_type}
				]]>
			</if>
			<if test="dept_ids != null and dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="retrieve_box_code != null and retrieve_box_code != ''">
   				<![CDATA[
			 		and ed.retrieve_box_code = #{retrieve_box_code}
				]]>
			</if>
			<if test="admin_dept_ids != null and admin_dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="admin_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="scope_dept_ids != null and scope_dept_ids != ''">
				and ed.scope_dept_id in
				<foreach item="item" index="index" collection="scope_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="admin_dept_ids_made != null and admin_dept_ids_made != ''">
				and ed.dept_id in
				<foreach item="item" index="index" collection="admin_dept_ids_made"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="conf_code != null and conf_code != ''">
   				<![CDATA[
			 		and UPPER(eb.conf_code) LIKE UPPER('%'+#{conf_code}+'%')
				]]>
			</if>
			<if test="expire_status ==0">
   				<![CDATA[
			 		and (ed.expire_time >= #{coming_expire_time} or ed.expire_time is null)
				]]>
			</if>
			<if test="expire_status ==1">
   				<![CDATA[
			 		and ed.expire_time <= #{expire_time} 
				]]>
			</if>
			<if test="expire_status ==2">
   				<![CDATA[
			 		and (ed.expire_time > #{expire_time} and ed.expire_time < #{coming_expire_time})
				]]>
			</if>
			<if test="borrow_dept_id != null and borrow_dept_id != ''">
   				<![CDATA[
			 		and (ed.duty_dept_id = #{borrow_dept_id} or ed.duty_dept_id in(select br_dept_id from dept_open_scope dos where dos.dept_id=#{borrow_dept_id}))
				]]>
			</if>
			<if test="supervise_user_iidd != null and supervise_user_iidd != ''">
   				<![CDATA[
			 		and ed.supervise_user_iidd = #{supervise_user_iidd}
				]]>
			</if>
			<if test="seclv_codes != null and seclv_codes != ''">
				and ed.seclv_code in 
				<foreach item="item" index="index" collection="seclv_codes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</trim>
		<choose>
			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
			</when>
			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
			</when>
			<when test="start_time_sortable">
   				<![CDATA[
			 		order by sj_job.start_time desc
				]]>
			</when>
			<otherwise>
   				<![CDATA[
			 		order by ed.burn_time desc
				]]>
			</otherwise>
		</choose>
	</select>
	<select id="getAllCDLedgerSize" resultType="int" parameterType="map">
		<![CDATA[
			select count(distinct ed.cd_barcode) from entity_cd ed	
			left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			left join (select event_code,conf_code from event_burn) eb on (eb.event_code = ed.event_code)
			left join (select barcode,job_code from event_senddestroy) sd_event on (sd_event.barcode = ed.cd_barcode)
			left join (select job_code,job_status from job_process) sd_job on(sd_event.job_code = sd_job.job_code)
		left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="file_list != null and file_list != ''">
				<![CDATA[
				 and UPPER(ed.file_list) LIKE UPPER('%'+#{file_list}+'%')
				]]>
			</if>
		    <if test="event_ids != null and event_ids != ''" >
				and ed.cd_barcode in 
				<foreach item="item" index="index" collection="event_ids" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		    <if test="barcodes != null and barcodes != ''" >
				and ed.cd_barcode in 
				<foreach item="item" index="index" collection="barcodes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
				 and ed.duty_user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="user_id != null and user_id != ''">
				<![CDATA[
					and ed.user_iidd = #{user_id}
				]]>
			</if>
			<if test="output_undertaker != null and output_undertaker != ''">
				<![CDATA[
					and (ed.output_undertaker = #{output_undertaker} or ed.output_undertaker is null)
				]]>
			</if>
			<if test="is_burn_result">
				<![CDATA[
					and ed.cd_state in (0, 8, 9)
				]]>
			</if>
			<if test="is_recycled">
				<![CDATA[
					and ed.cd_state =1 
				]]>
			</if>
			<if test="is_sendes">
				<![CDATA[
					and ed.cd_state =1
				]]>
			</if>
			<if test="is_sendes_1">
				<![CDATA[
					and ed.cd_state =11
				]]>
			</if>
			<if test="is_retrieved">
				<![CDATA[
					and ed.cd_state = 11 and jp.job_status = 'true'
				]]>
			</if>
			<if test="is_retrieve">
				<![CDATA[
					and ed.cd_state = 0 and ed.job_code is null
				]]>
			</if>
			<if test="is_transfer">
				<![CDATA[
					and ed.cd_state = 0
				]]>
			</if>
			<if test="is_handle">
				<![CDATA[
					and ed.cd_state = 0
				]]>
			</if>
			<if test="data_type != null and data_type != ''">
   				<![CDATA[
			 		and ed.data_type = #{data_type}
				]]>
			</if>
			<if test="cd_barcode != null and cd_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
				]]>
			</if>
			<if test="send_num != null and send_num != ''">
   				<![CDATA[
			 		and UPPER(ed.send_num) LIKE UPPER('%'+#{send_num}+'%')
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_user_name) LIKE UPPER('%'+#{duty_user_name}+'%') 
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and ed.user_name = #{user_name}
				]]>
			</if>
			<if test="dept_iidd != null and dept_iidd != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_iidd}
				]]>
			</if>
			<if test="dept_name != null and dept_name != ''">
   				<![CDATA[
			 		and ed.dept_name = #{dept_name}
				]]>
			</if>
			<if test="duty_user_iidd != null and duty_user_iidd != ''">
   				<![CDATA[
			 		and ed.duty_user_iidd = #{duty_user_iidd}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
					 		and ed.retrieve_time >= #{start_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
					 		and ed.destroy_time >= #{start_time}
						]]>
					</when>
					<otherwise>
		   				<![CDATA[
					 		and ed.burn_time >= #{start_time}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="end_time != null and end_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
			 				and ed.retrieve_time <= #{end_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
			 				and ed.destroy_time <= #{end_time}
						]]>
					</when>
					<otherwise>
						<![CDATA[
			 				and ed.burn_time <= #{end_time}
						]]>
					</otherwise>
   				
				</choose>
			</if>
			<if test="cd_state != null and cd_state != ''">
				<choose>
					<when test="output_undertaker != null and output_undertaker != ''">
						<![CDATA[
			 				and (ed.cd_state = #{cd_state} or ed.cd_state=8)
						]]>
					</when>
					<otherwise>
						<![CDATA[
			 				and ed.cd_state = #{cd_state}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="has_job_code">
				<![CDATA[
					and ed.job_code is not null and ed.job_code != ''
				]]>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
			<if test="current_dept_id != null and current_dept_id != ''">
   				<![CDATA[
			 		and (ed.scope_dept_id = #{current_dept_id} or ed.scope_dept_id in (select dept_parent_id from sec_dept s_dept where s_dept.dept_id=#{current_dept_id}) or ed.scope_dept_id in(select br_dept_id from dept_open_scope dos where dos.dept_id=#{current_dept_id}))
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="scope_dept != null and scope_dept != ''">
   				<![CDATA[
			 		and ed.scope = #{scope_dept}
				]]>
			</if>
			<if test="scope_dept_id != null and scope_dept_id != ''">
   				<![CDATA[
			 		and ed.scope_dept_id = #{scope_dept_id}
				]]>
			</if>
			<if test="duty_dept_id != null and duty_dept_id != ''">
   				<![CDATA[
			 		and ed.duty_dept_id = #{duty_dept_id}
				]]>
			</if>
			<if test="dept_CS != null and dept_CS != ''">
				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{dept_CS}+'%'
							]]>
					</when>
					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{dept_CS}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="jobtype_code != null and jobtype_code != ''">
   				<![CDATA[
			 		and jp.jobtype_code = #{jobtype_code}
				]]>
			</if>
			<if test="create_type != null and create_type != ''">
   				<![CDATA[
			 		and ed.create_type = #{create_type}
				]]>
			</if>
			<if test="dept_ids != null and dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="retrieve_box_code != null and retrieve_box_code != ''">
   				<![CDATA[
			 		and ed.retrieve_box_code = #{retrieve_box_code}
				]]>
			</if>
			<if test="admin_dept_ids != null and admin_dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="admin_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="scope_dept_ids != null and scope_dept_ids != ''">
				and ed.scope_dept_id in
				<foreach item="item" index="index" collection="scope_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="admin_dept_ids_made != null and admin_dept_ids_made != ''">
				and ed.dept_id in
				<foreach item="item" index="index" collection="admin_dept_ids_made"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="conf_code != null and conf_code != ''">
   				<![CDATA[
			 		and UPPER(eb.conf_code) LIKE UPPER('%'+#{conf_code}+'%')
				]]>
			</if>
			<if test="expire_status ==0">
   				<![CDATA[
			 		and (ed.expire_time >= #{coming_expire_time} or ed.expire_time is null)
				]]>
			</if>
			<if test="expire_status ==1">
   				<![CDATA[
			 		and ed.expire_time <= #{expire_time} 
				]]>
			</if>
			<if test="expire_status ==2">
   				<![CDATA[
			 		and (ed.expire_time > #{expire_time} and ed.expire_time < #{coming_expire_time})
				]]>
			</if>
			<if test="borrow_dept_id != null and borrow_dept_id != ''">
   				<![CDATA[
			 		and (ed.duty_dept_id = #{borrow_dept_id} or ed.duty_dept_id in(select br_dept_id from dept_open_scope dos where dos.dept_id=#{borrow_dept_id}))
				]]>
			</if>
			<if test="barcodes != null and barcodes != ''" >
				and ed.cd_barcode in 
				<foreach item="item" index="index" collection="barcodes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="supervise_user_iidd != null and supervise_user_iidd != ''">
   				<![CDATA[
			 		and ed.supervise_user_iidd = #{supervise_user_iidd}
				]]>
			</if>
			<if test="seclv_codes != null and seclv_codes != ''">
				and ed.seclv_code in 
				<foreach item="item" index="index" collection="seclv_codes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</trim>
	</select>
	<select id="getOneCDLedgerById" resultType="entitycd"
		parameterType="int">
		<![CDATA[
			select ed.*,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,jp.output_user_name,jp.output_dept_name,eb.conf_code,jp.accept_user_iidd,jp.send_way,jp.carryout_user_names
			from entity_cd ed
			left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)	
			left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			left join (select job_code,jobtype_code,job_status,output_user_name,output_dept_name,accept_user_iidd,send_way,carryout_user_names from job_process) jp on(ed.job_code = jp.job_code)
			left join (select event_code,conf_code from event_burn) eb on (eb.event_code = ed.event_code)
			where cd_id = #{cd_id}	
		]]>
	</select>
	<update id="updateRetrieveCDs" parameterType="map">
		<![CDATA[
			update entity_cd set cd_state=1, retrieve_type=1 where cd_id in	
		]]>
		<foreach item="item" collection="cd_ids" open="(" separator=","
			close=")">
			#{item}
		</foreach>
	</update>
	<update id="destroyRetrievedCDs" parameterType="map">
		<![CDATA[
			update entity_cd set 
			cd_state=4 ,
			destroy_time=#{destroy_time}, 
			destroy_user_iidd =#{duty_user_iidd},
			duty_user_iidd=#{duty_user_iidd},
			duty_user_name=#{duty_user_name},
			duty_dept_id=#{duty_dept_id},										
			duty_dept_name=#{duty_dept_name}
			where cd_id in	
		]]>
		<foreach item="item" collection="cd_ids" open="(" separator=","
			close=")">
			#{item}
		</foreach>
	</update>
	<update id="updateHandleCDs" parameterType="map">
		<![CDATA[
			update entity_cd set cd_state=3 where cd_id in 	
		]]>
		<foreach item="item" index="index" collection="cd_ids" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>
	<update id="signCD" parameterType="map">
		<![CDATA[
		update entity_cd 
			set burn_result=0, fail_remark=#{fail_remark},file_num=#{file_num},file_list=#{file_list} 
			where cd_id=#{cd_id}
		]]>
		<![CDATA[
		update event_burn set burn_status=0 , apply_time = null
			from event_burn eb, entity_cd ec
			where eb.event_code = ec.event_code and ec.cd_id=#{cd_id} 
		]]>
	</update>
	<update id="signPaper" parameterType="map">
		<![CDATA[
		update entity_paper 
			set print_result=0, fail_remark=#{fail_remark}, page_count=#{page_count}
			where paper_id=#{paper_id}
		]]>
		<![CDATA[
		update event_print set print_status=0 
			from event_print eb, entity_paper ec
			where eb.event_code = ec.event_code and ec.paper_id=#{paper_id} 
		]]>
	</update>
	<select id="getAllPaperLedgerList" resultType="entitypaper"
		parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select distinct ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,
			du.user_name destroy_user_name,sr.box_name as retrieve_box_name,jp.output_user_name,jp.output_dept_name,ep.keyword_content,
			dp.dept_cs,sj_job.start_time,jp.send_way
			 from entity_paper ed 
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status,output_user_name,output_dept_name,send_way from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select barcode,job_code from event_senddestroy) sd_event on (sd_event.barcode = ed.paper_barcode)
			 left join (select job_code,job_status from job_process) sd_job on(sd_event.job_code = sd_job.job_code)
			 left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)
			 left join (select job_code,start_time from job_process) sj_job on(ed.job_code = sj_job.job_code)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		     <if test="event_ids != null and event_ids != ''" >
				and ed.paper_barcode in 
				<foreach item="item" index="index" collection="event_ids" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="seclv_codes != null and seclv_codes != ''">
				and ed.seclv_code in 
				<foreach item="item" index="index" collection="seclv_codes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="barcodes != null and barcodes != ''" >
				and ed.paper_barcode in 
				<foreach item="item" index="index" collection="barcodes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and ed.duty_user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="user_id != null and user_id != ''">
				<![CDATA[
					and ed.user_iidd = #{user_id}
				]]>
			</if>
			<if test="output_undertaker != null and output_undertaker != ''">
				<![CDATA[
					and (ed.output_undertaker = #{output_undertaker} or ed.output_undertaker is null)
				]]>
			</if>
			<if test="is_print_result">
				<![CDATA[
					and ed.paper_state in (0, 8, 9, 15)
				]]>
			</if>
			<if test="is_security_result != null and is_security_result != ''">
				<![CDATA[
					and ed.seclv_code in (1, 2, 3, 4)
				]]>
			</if>
			<if test="is_expectPaper">
				<![CDATA[
					and ed.print_result='2'
				]]>
			</if>
			<if test="printResult">
				<![CDATA[
					and ed.print_result in ('0','1')
				]]>
			</if>
			<if test="is_graph">
				<![CDATA[
					and ep.print_type=2
				]]>
			</if>
			<if test="is_retrieve">
				<![CDATA[
					and ed.paper_state = 0  and ed.job_code is null
				]]>
			</if>
			<if test="is_transfer">
				<![CDATA[
					and ed.paper_state = 0
				]]>
			</if>
			<if test="is_recycled">
				<![CDATA[
					and ed.paper_state =1
				]]>
			</if>
			<if test="is_sendes">
				<![CDATA[
					and ed.paper_state =1
				]]>
			</if>
			<if test="is_sendes_1">
				<![CDATA[
					and ed.paper_state =11
				]]>
			</if>
			<if test="is_retrieved">
				<![CDATA[
					and ed.paper_state = 11 and jp.job_status = 'true'
				]]>
			</if>
			<if test="is_handle">
				<![CDATA[
					and ed.paper_state = 0
				]]>
			</if>
			<if test="not_book">
				<![CDATA[
					and ed.paper_barcode not in(
						select ep.paper_barcode from entity_paper ep 
						join event_import ei on ep.event_code=ei.event_code
						where ei.file_kind='BOOK' and ep.scope='dept')
				]]>
			</if>
			<if test="or_book">
				<![CDATA[
					and ed.paper_barcode in(
						select ep.paper_barcode from entity_paper ep 
						join event_import ei on ep.event_code=ei.event_code
						where ei.file_kind='BOOK' and ep.scope='dept')
				]]>
			</if>
			<if test="secret_book_null">
   				<![CDATA[
			 		and ed.secret_book is null 
				]]>
			</if>
			<if test="secret_book_1">
   				<![CDATA[
			 		and ed.secret_book =1 
				]]>
			</if>
			<if test="has_job_code">
				<![CDATA[
					and ed.job_code is not null and ed.job_code != ''
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' ">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="is_reprint != null and is_reprint != ''">
   				<![CDATA[
			 		and ed.is_reprint = #{is_reprint}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="printer_code != null and printer_code != ''">
   				<![CDATA[
			 		and ed.printer_code = #{printer_code}
				]]>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_user_name) LIKE UPPER('%'+#{duty_user_name}+'%') 
				]]>
			</if>
			<if test="duty_user_iidd != null and duty_user_iidd != ''">
   				<![CDATA[
			 		and ed.duty_user_iidd = #{duty_user_iidd}
				]]>
			</if>
			<if test="duty_dept_name != null and duty_dept_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_dept_name) LIKE UPPER('%'+#{duty_dept_name}+'%') 
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="dept_name != null and dept_name != ''">
   				<![CDATA[
			 		and ed.dept_name = #{dept_name}
				]]>
			</if>
			<if test="dept_iidd != null and dept_iidd != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_iidd}
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and ed.user_name = #{user_name}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
					 		and ed.retrieve_time >= #{start_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
					 		and ed.destroy_time >= #{start_time}
						]]>
					</when>
					<otherwise>
		   				<![CDATA[
					 		and ed.print_time >= #{start_time}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="end_time != null and end_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
			 				and ed.retrieve_time <= #{end_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
			 				and ed.destroy_time <= #{end_time}
						]]>
					</when>
					<otherwise>
						<![CDATA[
			 				and ed.print_time <= #{end_time}
						]]>
					</otherwise>
   				
				</choose>
			</if>
			<if test="paper_state != null and paper_state != ''">
				<choose>
					<when test="output_undertaker != null and output_undertaker != ''">
						<![CDATA[
			 				and (ed.paper_state = #{paper_state} or ed.paper_state=8)
						]]>
					</when>
					<otherwise>
						<![CDATA[
			 				and ed.paper_state = #{paper_state}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="paper_barcode != null and paper_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
				]]>
			</if>
			<if test="send_num != null and send_num != ''">
   				<![CDATA[
			 		and UPPER(ed.send_num) LIKE UPPER('%'+#{send_num}+'%')
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
   				<![CDATA[
			 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if>
			<if test="jobtype_code != null and jobtype_code != ''">
   				<![CDATA[
			 		and jp.jobtype_code = #{jobtype_code}
				]]>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
			<if test="current_dept_id != null and current_dept_id != ''">
   				<![CDATA[
			 		and (ed.scope_dept_id = #{current_dept_id} or ed.scope_dept_id in (select dept_parent_id from sec_dept s_dept where s_dept.dept_id=#{current_dept_id}) or ed.scope_dept_id in(select br_dept_id from dept_open_scope dos where dos.dept_id=#{current_dept_id}))
				]]>
			</if>
			<if test="scope_dept != null and scope_dept != ''">
   				<![CDATA[
			 		and ed.scope = #{scope_dept}
				]]>
			</if>
			<if test="scope_dept_id != null and scope_dept_id != ''">
   				<![CDATA[
			 		and ed.scope_dept_id = #{scope_dept_id}
				]]>
			</if>
			<if test="duty_dept_id != null and duty_dept_id != ''">
   				<![CDATA[
			 		and ed.duty_dept_id = #{duty_dept_id}
				]]>
			</if>
			<if test="dept_CS != null and dept_CS != ''">

				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{dept_CS}+'%'
							]]>
					</when>
					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{dept_CS}
						]]>
					</otherwise>

				</choose>
			</if>
			<if test="create_type != null and create_type != ''">
   				<![CDATA[
			 		and ed.create_type = #{create_type}
				]]>
			</if>
			<if test="dept_ids != null and dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="retrieve_box_code != null and retrieve_box_code != ''">
   				<![CDATA[
			 		and ed.retrieve_box_code = #{retrieve_box_code}
				]]>
			</if>
			<if test="admin_dept_ids_made != null and admin_dept_ids_made != ''">
				and ed.dept_id in
				<foreach item="item" index="index" collection="admin_dept_ids_made"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="admin_dept_ids != null and admin_dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="admin_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="scope_dept_ids != null and scope_dept_ids != ''">
				and ed.scope_dept_id in
				<foreach item="item" index="index" collection="scope_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="keyword_content != null and keyword_content != ''">
   				<![CDATA[
			 		and UPPER(ep.keyword_content) LIKE UPPER('%'+#{keyword_content}+'%')
				]]>
			</if>
			<if test="expire_status ==0">
   				<![CDATA[
			 		and (ed.expire_time >= #{coming_expire_time} or ed.expire_time is null)
				]]>
			</if>
			<if test="expire_status ==1">
   				<![CDATA[
			 		and ed.expire_time <= #{expire_time} 
				]]>
			</if>
			<if test="expire_status ==2">
   				<![CDATA[
			 		and (ed.expire_time > #{expire_time} and ed.expire_time < #{coming_expire_time})
				]]>
			</if>
			<if test="borrow_dept_id != null and borrow_dept_id != ''">
   				<![CDATA[
			 		and (ed.duty_dept_id = #{borrow_dept_id} or ed.duty_dept_id in(select br_dept_id from dept_open_scope dos where dos.dept_id=#{borrow_dept_id}))
				]]>
			</if>
			<if test="replacePage !=null and replacePage != ''">
   				<![CDATA[
			 		and ed.paper_state in (0, 7, 8, 9)
				]]>
			</if>
			<if test="barcodes != null and barcodes != ''" >
				and ed.paper_barcode in 
				<foreach item="item" index="index" collection="barcodes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="supervise_user_iidd != null and supervise_user_iidd != ''">
   				<![CDATA[
			 		and ed.supervise_user_iidd = #{supervise_user_iidd}
				]]>
			</if>
		</trim>
		and (ed.PID_barcode is null or ed.PID_barcode = '') and merge_state != 1
		<choose>
			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
			</when>
			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
			</when>
			<when test="start_time_sortable">
   				<![CDATA[
			 		order by sj_job.start_time desc
				]]>
			</when>
			<otherwise>
   				<![CDATA[
			 		order by ed.print_time desc
				]]>
			</otherwise>
		</choose>
	</select>
	<select id="getAllPaperLedgerSize" resultType="int"
		parameterType="map">
		<![CDATA[
			select count(distinct ed.paper_barcode) from entity_paper ed
			left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			left join (select barcode,job_code from event_senddestroy) sd_event on (sd_event.barcode = ed.paper_barcode)
			left join (select job_code,job_status from job_process) sd_job on(sd_event.job_code = sd_job.job_code)
			left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and ed.duty_user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="event_ids != null and event_ids != ''" >
				and ed.paper_barcode in 
				<foreach item="item" index="index" collection="event_ids" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="barcodes != null and barcodes != ''" >
				and ed.paper_barcode in 
				<foreach item="item" index="index" collection="barcodes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="user_id != null and user_id != ''">
				<![CDATA[
					and ed.user_iidd = #{user_id}
				]]>
			</if>
			<if test="seclv_codes != null and seclv_codes != ''">
				and ed.seclv_code in 
				<foreach item="item" index="index" collection="seclv_codes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="output_undertaker != null and output_undertaker != ''">
				<![CDATA[
					and (ed.output_undertaker = #{output_undertaker} or ed.output_undertaker is null)
				]]>
			</if>
			<if test="is_print_result">
				<![CDATA[
					and ed.paper_state in (0, 8, 9, 15)
				]]>
			</if>
			<if test="is_security_result != null and is_security_result != ''">
				<![CDATA[
					and ed.seclv_code in (1, 2, 3, 4)
				]]>
			</if>
			<if test="is_expectPaper">
				<![CDATA[
					and ed.print_result='2'
				]]>
			</if>
			<if test="printResult">
				<![CDATA[
					and ed.print_result in ('0','1')
				]]>
			</if>
			<if test="is_graph">
				<![CDATA[
					and ep.print_type=2
				]]>
			</if>
			<if test="is_retrieve">
				<![CDATA[
					and ed.paper_state = 0  and ed.job_code is null
				]]>
			</if>
			<if test="is_transfer">
				<![CDATA[
					and ed.paper_state = 0
				]]>
			</if>
			<if test="is_recycled">
				<![CDATA[
					and ed.paper_state =1
				]]>
			</if>
			<if test="is_sendes">
				<![CDATA[
					and ed.paper_state =1
				]]>
			</if>
			<if test="is_sendes_1">
				<![CDATA[
					and ed.paper_state =11
				]]>
			</if>
			<if test="is_retrieved">
				<![CDATA[
					and ed.paper_state = 11 and jp.job_status = 'true'
				]]>
			</if>
			<if test="is_handle">
				<![CDATA[
					and ed.paper_state = 0
				]]>
			</if>
			
			<if test="not_book">
				<![CDATA[
					and ed.paper_barcode not in(
						select ep.paper_barcode from entity_paper ep 
						join event_import ei on ep.event_code=ei.event_code
						where ei.file_kind='BOOK' and ep.scope='dept')
				]]>
			</if>
			<if test="or_book">
				<![CDATA[
					and ed.paper_barcode in(
						select ep.paper_barcode from entity_paper ep 
						join event_import ei on ep.event_code=ei.event_code
						where ei.file_kind='BOOK' and ep.scope='dept')
				]]>
			</if>
		
			<if test="secret_book_null">
   				<![CDATA[
			 		and ed.secret_book is null 
				]]>
			</if>
			<if test="secret_book_1">
   				<![CDATA[
			 		and ed.secret_book =1 
				]]>
			</if>
			<if test="has_job_code">
				<![CDATA[
					and ed.job_code is not null and ed.job_code != ''
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="is_reprint != null and is_reprint != ''">
   				<![CDATA[
			 		and ed.is_reprint = #{is_reprint}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="printer_code != null and printer_code != ''">
   				<![CDATA[
			 		and ed.printer_code = #{printer_code}
				]]>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_user_name) LIKE UPPER('%'+#{duty_user_name}+'%') 
				]]>
			</if>
			<if test="duty_user_iidd != null and duty_user_iidd != ''">
   				<![CDATA[
			 		and ed.duty_user_iidd = #{duty_user_iidd}
				]]>
			</if>
			<if test="duty_dept_name != null and duty_dept_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_dept_name) LIKE UPPER('%'+#{duty_dept_name}+'%') 
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="dept_name != null and dept_name != ''">
   				<![CDATA[
			 		and ed.dept_name = #{dept_name}
				]]>
			</if>
			<if test="dept_iidd != null and dept_iidd != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_iidd}
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and ed.user_name = #{user_name}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
					 		and ed.retrieve_time >= #{start_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
					 		and ed.destroy_time >= #{start_time}
						]]>
					</when>
					<otherwise>
		   				<![CDATA[
					 		and ed.print_time >= #{start_time}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="end_time != null and end_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
			 				and ed.retrieve_time <= #{end_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
			 				and ed.destroy_time <= #{end_time}
						]]>
					</when>
					<otherwise>
						<![CDATA[
			 				and ed.print_time <= #{end_time}
						]]>
					</otherwise>
   				
				</choose>
			</if>
			<if test="paper_state != null and paper_state != ''">
				<choose>
					<when test="output_undertaker != null and output_undertaker != ''">
						<![CDATA[
			 				and (ed.paper_state = #{paper_state} or ed.paper_state=8)
						]]>
					</when>
					<otherwise>
						<![CDATA[
			 				and ed.paper_state = #{paper_state}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="paper_barcode != null and paper_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
				]]>
			</if>
			<if test="send_num != null and send_num != ''">
   				<![CDATA[
			 		and UPPER(ed.send_num) LIKE UPPER('%'+#{send_num}+'%')
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
   				<![CDATA[
			 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if>
			<if test="jobtype_code != null and jobtype_code != ''">
   				<![CDATA[
			 		and jp.jobtype_code = #{jobtype_code}
				]]>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
			<if test="current_dept_id != null and current_dept_id != ''">
   				<![CDATA[
			 		and (ed.scope_dept_id = #{current_dept_id} or ed.scope_dept_id in (select dept_parent_id from sec_dept s_dept where s_dept.dept_id=#{current_dept_id}) or ed.scope_dept_id in(select br_dept_id from dept_open_scope dos where dos.dept_id=#{current_dept_id}))
				]]>
			</if>
			<if test="scope_dept != null and scope_dept != ''">
   				<![CDATA[
			 		and ed.scope = #{scope_dept}
				]]>
			</if>
			<if test="scope_dept_id != null and scope_dept_id != ''">
   				<![CDATA[
			 		and ed.scope_dept_id = #{scope_dept_id}
				]]>
			</if>
			<if test="duty_dept_id != null and duty_dept_id != ''">
   				<![CDATA[
			 		and ed.duty_dept_id = #{duty_dept_id}
				]]>
			</if>
			<if test="dept_CS != null and dept_CS != ''">
				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{dept_CS}+'%'
							]]>
					</when>

					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{dept_CS}
						]]>
					</otherwise>

				</choose>

			</if>
			<if test="create_type != null and create_type != ''">
   				<![CDATA[
			 		and ed.create_type = #{create_type}
				]]>
			</if>
			<if test="dept_ids != null and dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="retrieve_box_code != null and retrieve_box_code != ''">
   				<![CDATA[
			 		and ed.retrieve_box_code = #{retrieve_box_code}
				]]>
			</if>
			<if test="admin_dept_ids_made != null and admin_dept_ids_made != ''">
				and ed.dept_id in
				<foreach item="item" index="index" collection="admin_dept_ids_made"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="admin_dept_ids != null and admin_dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="admin_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="scope_dept_ids != null and scope_dept_ids != ''">
				and ed.scope_dept_id in
				<foreach item="item" index="index" collection="scope_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="keyword_content != null and keyword_content != ''">
   				<![CDATA[
			 		and UPPER(ep.keyword_content) LIKE UPPER('%'+#{keyword_content}+'%')
				]]>
			</if>
			<if test="expire_status ==0">
   				<![CDATA[
			 		and (ed.expire_time >= #{coming_expire_time} or ed.expire_time is null)
				]]>
			</if>
			<if test="expire_status ==1">
   				<![CDATA[
			 		and ed.expire_time <= #{expire_time} 
				]]>
			</if>
			<if test="expire_status ==2">
   				<![CDATA[
			 		and (ed.expire_time > #{expire_time} and ed.expire_time < #{coming_expire_time})
				]]>
			</if>
			<if test="borrow_dept_id != null and borrow_dept_id != ''">
   				<![CDATA[
			 		and (ed.duty_dept_id = #{borrow_dept_id} or ed.duty_dept_id in(select br_dept_id from dept_open_scope dos where dos.dept_id=#{borrow_dept_id}))
				]]>
			</if>
			<if test="replacePage !=null and replacePage != ''">
   				<![CDATA[
			 		and ed.paper_state in (0, 7, 8, 9)
				]]>
			</if>
			<if test="supervise_user_iidd != null and supervise_user_iidd != ''">
   				<![CDATA[
			 		and ed.supervise_user_iidd = #{supervise_user_iidd}
				]]>
			</if>
		</trim>
		and (ed.PID_barcode is null or ed.PID_barcode='') and merge_state != 1
	</select>
	<select id="getOnePaperLedgerById" resultType="entitypaper"
		parameterType="string">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,jp.send_way,jp.carryout_user_names,ru.user_name retrieve_user_name,du.user_name destroy_user_name,jp.jobtype_code,jp.job_status,jp.output_user_name,jp.output_dept_name,ep.keyword_content,jp.accept_user_iidd
			from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status,output_user_name,output_dept_name,accept_user_iidd,send_way,carryout_user_names from job_process) jp on(ed.job_code = jp.job_code)
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select event_code,keyword_content from event_print) ep on (ep.event_code = ed.event_code)
			where paper_id = #{paper_id}	
		]]>
	</select>
	<update id="updateRetrievePapers" parameterType="map">
		<![CDATA[
			update entity_paper set paper_state=1 , retrieve_type=1 where paper_id in	
		]]>
		<foreach item="item" collection="paper_ids" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>
	<update id="destroyRetrievedPapers" parameterType="map">
		<![CDATA[
			update entity_paper set 
			paper_state=4 ,
			destroy_time=#{destroy_time}, 
			destroy_user_iidd =#{duty_user_iidd},
			duty_user_iidd=#{duty_user_iidd},
			duty_user_name=#{duty_user_name},
			duty_dept_id=#{duty_dept_id},										
			duty_dept_name=#{duty_dept_name} 
			where paper_id in	
		]]>
		<foreach item="item" collection="paper_ids" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>
	<update id="updateHandlePapers" parameterType="map">
		<![CDATA[
			update entity_paper set paper_state=3 where paper_id in 	
		]]>
		<foreach item="item" index="index" collection="paper_ids"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
	<insert id="saveEventTranfer" parameterType="eventtransfer">
		<![CDATA[
			insert into event_transfer(EVENT_CODE,USER_IIDD,DEPT_ID,SECLV_CODE,ENTITY_TYPE,BARCODE,PROJECT_CODE,USAGE_CODE,SUMM,ACCEPT_USER_IIDD,ACCEPT_DEPT_ID,APPLY_TIME,TRANSFER_STATUS,JOB_CODE,HIS_JOB_CODE)
			values(#{event_code},#{user_iidd},#{dept_id},#{seclv_code},#{entity_type},#{barcode},#{project_code},#{usage_code},#{summ},#{accept_user_iidd},#{accept_dept_id},#{apply_time},#{transfer_status},#{job_code},#{his_job_code})
		]]>
		<![CDATA[
			update entity_paper 
				set paper_state = 5
			where paper_barcode=#{barcode}
		]]>
	</insert>
	<select id="getTransferEventList" parameterType="map"
		resultType="eventtransfer">
		<![CDATA[
			select e.*,ss.seclv_name,su.user_name,sd.dept_name,syu.usage_name,sp.project_name,jp.job_status,dept.dept_name accept_dept_name,a_user.user_name accept_user_name 
			from event_transfer e
			left join job_process jp on(e.job_code=jp.job_code)
			left join (select seclv_code,seclv_name from sec_user_seclv) ss on (e.seclv_code=ss.seclv_code)
			left join (select user_iidd,user_name,dept_id from sec_user) su on(e.user_iidd=su.user_iidd)
			left join (select dept_id,dept_name from sec_dept) sd on(e.dept_id=sd.dept_id)
			left join sys_usage syu on(e.usage_code=syu.usage_code)
			left join sys_project sp on(e.project_code=sp.project_code)
			left join (select user_iidd,user_name,dept_id from sec_user) a_user on(e.accept_user_iidd=a_user.user_iidd)
			left join (select dept_id,dept_name from sec_dept) dept on(e.accept_dept_id = dept.dept_id)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">

			<if test="user_iidd != null and user_iidd != ''">
   				<![CDATA[
			 		and e.user_iidd = #{user_iidd} 
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and e.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and e.duty_user_name = #{duty_user_name}
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and e.apply_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and e.apply_time <= #{endTime}
				]]>
			</if>
			<if test="entity_type != null and entity_type != ''">
   				<![CDATA[
			 		and e.entity_type = #{entity_type}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
				<![CDATA[
					and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="submitable">
   				<![CDATA[
			 		and e.transfer_status = 0
				]]>
			</if>
			<if test="!is_transfering">
   				<![CDATA[
			 		and e.job_code = ''
				]]>
			</if>
		</trim>
	</select>
	<select id="getPaperListByJobCode" parameterType="string"
		resultType="entitypaper">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			where ed.job_code=#{job_code}
		]]>
	</select>
	<update id="cancelHandlePaperById" parameterType="string">
		<![CDATA[
			update entity_paper 
				set job_code = null,paper_state = 0
			where paper_id=#{paper_id}
		]]>
	</update>
	<update id="cancelHandleCDById" parameterType="string">
		<![CDATA[
			update entity_cd 
				set job_code = null,cd_state = 0
			where cd_id=#{cd_id}
		]]>
	</update>
	<update id="cancelHandleModifyPaperById" parameterType="string">
		<![CDATA[
			update entity_paper 
				set paper_state = 0
			where paper_barcode=#{paper_barcode}
		]]>
	</update>
	<update id="cancelHandleModifyCDById" parameterType="string">
		<![CDATA[
			update entity_cd 
				set cd_state = 0
			where cd_barcode=#{cd_barcode}
		]]>
	</update>
	<select id="getHandleModifyPaperCountByJobCode" parameterType="string" resultType="int">
		<![CDATA[
			select count(1) from event_modify where job_code=#{job_code}
		]]>
	</select>
	<select id="getHandlePaperCountByJobCode" parameterType="string" resultType="int">
		<![CDATA[
			select count(1) from entity_paper where job_code=#{job_code}
		]]>
	</select>
	<select id="getPaperByBarcode" parameterType="string"
		resultType="entitypaper">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.job_status,jp.jobtype_code,jp.send_way,jp.carryout_user_names,sur.user_name as retrieve_user_name,sud.user_name as destroy_user_name,jp.output_user_name,jp.output_dept_name,ep.keyword_content 
			from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status,output_user_name,output_dept_name,send_way,carryout_user_names from job_process) jp on(ed.job_code = jp.job_code)
			 left join (select user_iidd,user_name from sec_user) sur on (sur.user_iidd = ed.retrieve_user_iidd)
			 left join (select user_iidd,user_name from sec_user) sud on (sud.user_iidd = ed.destroy_user_iidd)
			 left join (select event_code,keyword_content from event_print) ep on (ep.event_code = ed.event_code)
			where ed.paper_barcode=#{barcode}
		]]>
	</select>
	<select id="getCycleItemListByBarcode" parameterType="string"
		resultType="cycleitem">
		<![CDATA[
			select * from cycle_record
			where barcode=#{barcode} order by oper_time asc
		]]>
	</select>
	<select id="getOneTransferEventByCode" parameterType="string"
		resultType="eventtransfer">
		<![CDATA[
			select e.*,sus.seclv_name,sp.project_name,dept.dept_name accept_dept_name,us.usage_name from event_transfer e
			 left join sec_user_seclv sus on(e.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(e.project_code = sp.project_code)
			 left join (select dept_id,dept_name from sec_dept) dept on(e.accept_dept_id = dept.dept_id)
			 left join (select usage_code,usage_name from sys_usage) us on(us.usage_code = e.usage_code)
			where e.event_code=#{event_code} 
		]]>
	</select>

	<select id="getDeptIdByUserId" parameterType="string"
		resultType="string">
		<![CDATA[
			select dept_id from sec_user where user_iidd = #{accept_user_iidd}
		]]>
	</select>

	<update id="deleteEventTransfer" parameterType="string">
		<![CDATA[
			update event_transfer 
				set job_code = null
			where event_code=#{event_code}
		]]>

	</update>
	<update id="updatePaperTransferStatus" parameterType="string">
		<![CDATA[
			update entity_paper 
				set paper_state = 0
			where paper_barcode=#{barcode}
		]]>
	</update>

	<update id="updateEventTransfer" parameterType="map">
		<![CDATA[
		update event_transfer set event_code=#{event_code}, summ=#{summ},accept_user_iidd=#{accept_user_iidd}
		where event_code=#{event_code}
		]]>
	</update>

	<select id="getTransferEventByTransferId" parameterType="string"
		resultType="eventtransfer">
		<![CDATA[
		select e.*,ss.seclv_name,su.user_name,sd.dept_name,syu.usage_name,sp.project_name,jp.job_status,dept.dept_name accept_dept_name,a_user.user_name accept_user_name
			from event_transfer e
			left join job_process jp on(e.job_code=jp.job_code)
			left join (select seclv_code,seclv_name from sec_user_seclv) ss on (e.seclv_code=ss.seclv_code)
			left join (select user_iidd,user_name,dept_id from sec_user) su on(e.user_iidd=su.user_iidd)
			left join (select user_iidd,user_name,dept_id from sec_user) a_user on(e.accept_user_iidd=a_user.user_iidd)
			left join (select dept_id,dept_name from sec_dept) sd on(e.dept_id=sd.dept_id)
			left join sys_usage syu on(e.usage_code=syu.usage_code)
			left join sys_project sp on(e.project_code=sp.project_code)
			left join (select dept_id,dept_name from sec_dept) dept on(e.accept_dept_id = dept.dept_id)
			where e.id = #{id}
		]]>
	</select>

	<select id="getTransferEventByTransferCode" parameterType="string"
		resultType="eventtransfer">
		<![CDATA[
		select e.*,ss.seclv_name,su.user_name,sd.dept_name,syu.usage_name,sp.project_name,jp.job_status,dept.dept_name accept_dept_name,a_user.user_name accept_user_name
			from event_transfer e
			left join job_process jp on(e.job_code=jp.job_code)
			left join (select seclv_code,seclv_name from sec_user_seclv) ss on (e.seclv_code=ss.seclv_code)
			left join (select user_iidd,user_name,dept_id from sec_user) su on(e.user_iidd=su.user_iidd)
			left join (select user_iidd,user_name,dept_id from sec_user) a_user on(e.accept_user_iidd=a_user.user_iidd)
			left join (select dept_id,dept_name from sec_dept) sd on(e.dept_id=sd.dept_id)
			left join sys_usage syu on(e.usage_code=syu.usage_code)
			left join sys_project sp on(e.project_code=sp.project_code)
			left join (select dept_id,dept_name from sec_dept) dept on(e.accept_dept_id = dept.dept_id)
			where e.event_code = #{event_code}
		]]>
	</select>

	<select id="getJobCodeByEventCode" parameterType="string"
		resultType="string">
		<![CDATA[
			select job_code	from event_transfer where event_code = #{event_code}
		]]>
	</select>

	<update id="cancelTransferEventByEventCode" parameterType="string">
		<![CDATA[
			update event_transfer set
				job_code = null
			where event_code=#{event_code}
		]]>
	</update>

	<!-- 磁介质台帐 -->
	<select id="getAllDeviceLedgerList" resultType="entitydevice"
		parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[			 
			 select ed.*,sd.dept_name,ss.seclv_name,suu.user_name,sdu.user_name as duty_user_name,sbu.user_name as borrow_user_name,jp.jobtype_code
			 ,jp.job_status,borrow.dept_name borrow_dept_name,mt.typename med_type_name
			 from entity_device ed
		 	left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			left join sec_dept sd on(ed.dept_id = sd.dept_id)
			left join (select u.user_iidd,s.dept_name from sec_dept s,sec_user u where s.dept_id = u.dept_id) borrow on (borrow_user_iidd = borrow.user_iidd)				
			left join sec_user_seclv ss on(ed.seclv_code = ss.seclv_code)
			left join (select user_iidd,user_name from sec_user) suu on(ed.user_iidd=suu.user_iidd)
			left join (select user_iidd,user_name from sec_user) sdu on(ed.duty_user_iidd=sdu.user_iidd)
			left join (select user_iidd,user_name from sec_user) sbu on(ed.borrow_user_iidd=sbu.user_iidd)
			left join (select id,typename from med_type) mt on (ed.med_type=mt.id)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="borrow_user_iidd != null and borrow_user_iidd != ''">
				<![CDATA[
					ed.borrow_user_iidd = #{borrow_user_iidd}
				]]>
			</if>
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					ed.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="device_status != null and device_status != ''">
   				<![CDATA[
			 		and ed.device_status = #{device_status}
				]]>
			</if>
			<if test="med_type != null and med_type != ''">
   				<![CDATA[
			 		and ed.med_type = #{med_type}
				]]>
			</if>
			<if test="device_barcode != null and device_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.device_barcode) LIKE UPPER('%'+#{device_barcode}+'%')
				]]>
			</if>
			<if test="device_series != null and device_series != ''">
   				<![CDATA[
			 		and UPPER(ed.device_series) LIKE UPPER('%'+#{device_series}+'%')
				]]>
			</if>
			<if test="device_name != null and device_name != ''">
   				<![CDATA[
			 		and UPPER(ed.device_name) LIKE UPPER('%'+#{device_name}+'%')
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and ed.enter_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and ed.enter_time <= #{endTime}
				]]>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
			<if test="not is_all">
			<![CDATA[
				and ed.is_sealed='N'
			]]>
			</if>
			<choose>
				<when test="has_job_code">
	   				<![CDATA[
				 		and ed.job_code is not null and ed.job_code != ''
					]]>
					<if test="job_status != null and job_status != ''">
		   				<![CDATA[
					 		and jp.job_status = #{job_status}
						]]>
					</if>
				</when>
			</choose>
			<if test="job_code_is_null">
			<![CDATA[
				and (ed.job_code is null)
			]]>
		    </if>
		</trim>
		<![CDATA[
   				order by ed.is_sealed, ed.enter_time desc
   			]]>
	</select>
	<select id="getAllDeviceLedgerSize" resultType="int"
		parameterType="map">
		<![CDATA[
			 select count(ed.device_barcode)
			 from entity_device ed
		 	left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			left join sec_dept sd on(ed.dept_id = sd.dept_id)
			left join (select u.user_iidd,s.dept_name from sec_dept s,sec_user u where s.dept_id = u.dept_id) borrow on (borrow_user_iidd = borrow.user_iidd)				
			left join sec_user_seclv ss on(ed.seclv_code = ss.seclv_code)
			left join (select user_iidd,user_name from sec_user) suu on(ed.user_iidd=suu.user_iidd)
			left join (select user_iidd,user_name from sec_user) sdu on(ed.duty_user_iidd=sdu.user_iidd)
			left join (select user_iidd,user_name from sec_user) sbu on(ed.borrow_user_iidd=sbu.user_iidd)
			left join (select id,typename from med_type) mt on (ed.med_type=mt.id)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="borrow_user_iidd != null and borrow_user_iidd != ''">
				<![CDATA[
					ed.borrow_user_iidd = #{borrow_user_iidd}
				]]>
			</if>
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					ed.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="device_status != null and device_status != ''">
   				<![CDATA[
			 		and ed.device_status = #{device_status}
				]]>
			</if>
			<if test="med_type != null and med_type != ''">
   				<![CDATA[
			 		and ed.med_type = #{med_type}
				]]>
			</if>
			<if test="device_barcode != null and device_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.device_barcode) LIKE UPPER('%'+#{device_barcode}+'%')
				]]>
			</if>
			<if test="device_series != null and device_series != ''">
   				<![CDATA[
			 		and UPPER(ed.device_series) LIKE UPPER('%'+#{device_series}+'%')
				]]>
			</if>
			<if test="device_name != null and device_name != ''">
   				<![CDATA[
			 		and UPPER(ed.device_name) LIKE UPPER('%'+#{device_name}+'%')
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and ed.enter_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and ed.enter_time <= #{endTime}
				]]>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
			<if test="not is_all">
			<![CDATA[
				and ed.is_sealed='N'
			]]>
			</if>
			<choose>
				<when test="has_job_code">
	   				<![CDATA[
				 		and ed.job_code is not null and ed.job_code != ''
					]]>
					<if test="job_status != null and job_status != ''">
		   				<![CDATA[
					 		and jp.job_status = #{job_status}
						]]>
					</if>
				</when>
			</choose>
			<if test="job_code_is_null">
			<![CDATA[
				and (ed.job_code is null)
			]]>
		    </if>
		</trim>
	</select>
	<select id="getHandleModifyCDCountByJobCode" parameterType="string"
		resultType="int">
		<![CDATA[
			select count(1) from event_modify where job_code=#{job_code}
		]]>
	</select>
	<select id="getHandleCDCountByJobCode" parameterType="string"
		resultType="int">
		<![CDATA[
			select count(1) from entity_cd where job_code=#{job_code}
		]]>
	</select>
	<select id="getCDListByJobCode" parameterType="string"
		resultType="entitycd">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			where ed.job_code=#{job_code}
		]]>
	</select>
	<insert id="addCycleItem" parameterType="cycleitem">
		<![CDATA[
			insert into cycle_record(barcode,entity_type,oper_time,user_name,dept_name,oper,job_code)
			values(#{barcode},#{entity_type},#{oper_time},#{user_name},#{dept_name},#{oper},#{job_code})	
		]]>
	</insert>
	<select id="getDeviceListByJobCode" parameterType="string"
		resultType="entitydevice">
		<![CDATA[
			select ed.*,sus.seclv_name,sd.dept_name,suu.user_name,mt.typename med_type_name
			from entity_device ed
			 left join sec_dept sd on(ed.dept_id = sd.dept_id)
			 left join (select user_iidd,user_name from sec_user) suu on(ed.user_iidd=suu.user_iidd)
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			 left join (select id,typename from med_type) mt on (ed.med_type=mt.id)
			where ed.job_code=#{job_code}
		]]>
	</select>
	<update id="updateCDStateById" parameterType="map">
		<![CDATA[
			update entity_cd 
				set cd_state = #{cd_state}
			where cd_id = #{cd_id}
		]]>
	</update>
	<update id="updatePaperStateById" parameterType="map">
		<![CDATA[
			update entity_paper
				set paper_state = #{paper_state}
			where paper_id = #{paper_id}
		]]>
	</update>
	<select id="getCDByBarcode" parameterType="string" resultType="entitycd">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.job_status,jp.jobtype_code,jp.send_way,jp.carryout_user_names,sur.user_name as retrieve_user_name,sud.user_name as destroy_user_name,jp.output_user_name,jp.output_dept_name,eb.conf_code from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status,output_user_name,output_dept_name,send_way,carryout_user_names from job_process) jp on(ed.job_code = jp.job_code)
			 left join (select user_iidd,user_name from sec_user) sur on (sur.user_iidd = ed.retrieve_user_iidd)
			 left join (select user_iidd,user_name from sec_user) sud on (sud.user_iidd = ed.destroy_user_iidd)
			 left join (select event_code,conf_code from event_burn) eb on (eb.event_code = ed.event_code)
			where ed.cd_barcode=#{barcode}
		]]>
	</select>
	<update id="updatePaperStateByBarcode" parameterType="map">
		<![CDATA[
			update entity_paper 
				set paper_state = #{paper_state}
			where paper_barcode = #{paper_barcode}
		]]>
	</update>
	<update id="updateCDStateByBarcode" parameterType="map">
		<![CDATA[
			update entity_cd 
				set cd_state = #{cd_state},
				send_num = null
			where cd_barcode = #{cd_barcode}
		]]>
	</update>
	<insert id="addRejectRecord" parameterType="rejectrecord">
		<![CDATA[
			insert into reject_record(
			reject_code,
			entity_barcode,
			entity_type,
			entity_name,
			reject_time,
			send_user_iidd,
			send_dept_id,
			reject_user_name,
			reject_dept_name,
			reject_type,
			comment)
			values(
			#{reject_code},
			#{entity_barcode},
			#{entity_type},
			#{entity_name},
			#{reject_time},
			#{send_user_iidd},
			#{send_dept_id},
			#{reject_user_name},
			#{reject_dept_name},
			#{reject_type},
			#{comment})	
		]]>
	</insert>
	<select id="getDeptListByDeptAdminUserId" parameterType="string"
		resultType="SecDept">
		<![CDATA[
			select sda.dept_id ,dept.dept_name
			from sec_dept_admin sda
			left join (select dept_id,dept_name from sec_dept) dept on(sda.dept_id = dept.dept_id)
			where sda.user_iidd = #{deptadmin_user_iidd} and typeflag = 'MANAGE'
		]]>
	</select>
	<update id="updateEntityCD" parameterType="map">
		<![CDATA[
			update entity_cd 
				set duty_user_iidd=#{duty_user_iidd},
					duty_user_name=#{duty_user_name},
					duty_dept_id=#{duty_dept_id},										
					duty_dept_name=#{duty_dept_name},
					retrieve_time=#{retrieve_time},										
					retrieve_user_iidd=#{retrieve_user_iidd},
					]]>
        <if test="expire_time != null and expire_time != ''">
                <![CDATA[
                    expire_time=#{expire_time},
            ]]>
        </if>
        <![CDATA[
                cd_state=#{cd_state},
				output_confidential_num = #{output_confidential_num}				
				where cd_id=#{cd_id}	
		]]>
	</update>
	<update id="updateEntityPaper" parameterType="map">
		<![CDATA[
			update entity_paper 
				set duty_user_iidd=#{duty_user_iidd},
					duty_user_name=#{duty_user_name},
					duty_dept_id=#{duty_dept_id},										
					duty_dept_name=#{duty_dept_name},
					retrieve_time=#{retrieve_time},										
					retrieve_user_iidd=#{retrieve_user_iidd},
					paper_state=#{paper_state},	
					expire_time=#{expire_time},
					output_confidential_num = #{output_confidential_num}			
				where paper_id=#{paper_id}	
		]]>
	</update>
	<update id="resetEntityCDById" parameterType="string">
		<![CDATA[
			update entity_cd 
				set retrieve_time=NULL,										
					retrieve_user_iidd='',
					cd_state=0,
					job_code=null				
				where cd_id=#{cd_id}	
		]]>
	</update>
	<update id="resetEntityPaperById" parameterType="string">
		<![CDATA[
			update entity_paper 
				set retrieve_time=NULL,										
					retrieve_user_iidd='',
					paper_state=0,
					job_code=null			
				where paper_id=#{paper_id}	
		]]>
	</update>
	<select id="getPaperById" parameterType="string" resultType="entitypaper">
		<![CDATA[
			select *
			from entity_paper
			where paper_id = #{id}
		]]>
	</select>
	<select id="getDeviceByBarcode" parameterType="string"
		resultType="entitydevice">
		<![CDATA[
			select ed.*,sd.dept_name,ss.seclv_name,suu.user_name,sdu.user_name as duty_user_name,sbu.user_name as borrow_user_name,jp.jobtype_code,jp.job_status,mt.typename med_type_name
			from entity_device ed
				left join sec_dept sd on(ed.dept_id = sd.dept_id)				
				left join sec_user_seclv ss on(ed.seclv_code = ss.seclv_code)
				left join (select user_iidd,user_name from sec_user) suu on(ed.user_iidd=suu.user_iidd)
				left join (select user_iidd,user_name from sec_user) sdu on(ed.duty_user_iidd=sdu.user_iidd)
				left join (select user_iidd,user_name from sec_user) sbu on(ed.borrow_user_iidd=sbu.user_iidd)
				left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
				left join (select id,typename from med_type) mt on (ed.med_type=mt.id)
			where device_barcode=#{barcode}	
		]]>
	</select>
	<select id="getCDById" parameterType="string" resultType="entitycd">
		<![CDATA[
			select *
			from entity_cd
			where cd_id = #{id}
		]]>
	</select>
	<select id="checkShowPrintFile" parameterType="string"
		resultType="string">
		<![CDATA[
			select ss.is_paper_audit
			from sys_seclevel ss
			left join sec_user_seclv sus on (ss.seclv_code = sus.seclv_code)
			where sus.seclv_code = #{seclv_code}
		]]>
	</select>
	<select id="checkShowBurnFile" parameterType="string"
		resultType="string">
		<![CDATA[
			select ss.is_cd_audit
			from sys_seclevel ss
			left join sec_user_seclv sus on (ss.seclv_code = sus.seclv_code)
			where sus.seclv_code = #{seclv_code}
		]]>
	</select>
	<update id="updateRetrievePaper" parameterType="map">
		<![CDATA[
			update entity_paper set 
				retrieve_type=1,
				duty_user_iidd=#{duty_user_iidd},
				duty_user_name=#{duty_user_name},
				duty_dept_id=#{duty_dept_id},										
				duty_dept_name=#{duty_dept_name},
				retrieve_time=#{retrieve_time},										
				retrieve_user_iidd=#{retrieve_user_iidd},
				paper_state=#{paper_state},
				send_num = null		
			where paper_id=#{paper_id}	
		]]>
	</update>
	<update id="updateRetrieveCD" parameterType="map">
		<![CDATA[
			update entity_cd set 
				retrieve_type=1,
				duty_user_iidd=#{duty_user_iidd},
				duty_user_name=#{duty_user_name},
				duty_dept_id=#{duty_dept_id},										
				duty_dept_name=#{duty_dept_name},
				retrieve_time=#{retrieve_time},										
				retrieve_user_iidd=#{retrieve_user_iidd},
				cd_state=#{cd_state},
				send_num = null					
			where cd_id=#{cd_id}	
		]]>
	</update>
	<update id="resetPaperState" parameterType="string">
		<![CDATA[
			update entity_paper  set paper_state = 0, job_code = null where paper_id=#{paper_id}
		]]>
	</update>
	<update id="resetCDState" parameterType="string">
		<![CDATA[
			update entity_cd  set cd_state = 0, job_code = null  where cd_id=#{cd_id}
		]]>
	</update>
	<update id="resetPaperStateByBarcode" parameterType="string">
		<![CDATA[
			update entity_paper  set paper_state = 0  where paper_barcode=#{paper_barcode}
		]]>
	</update>
	<update id="resetCDStateByBarcode" parameterType="string">
		<![CDATA[
			update entity_cd  set cd_state = 0  where cd_barcode=#{cd_barcode}
		]]>
	</update>
	<update id="updatePaperSendCommentByBarcode" parameterType="map">
		<![CDATA[
		update entity_paper set fail_remark = isnull(fail_remark+',','') + #{comment} where paper_barcode=#{paper_barcode}
		]]>
	</update>
	<update id="updateCDSendCommentByBarcode" parameterType="map">
		<![CDATA[
		update entity_cd set fail_remark = isnull(fail_remark+',','')+ #{comment} where cd_barcode=#{cd_barcode}
		]]>
	</update>
	<select id="getRejectRecordByBarcode" parameterType="string"
		resultType="rejectrecord">
		<![CDATA[
			select * from reject_record where entity_barcode=#{entity_barcode}
		]]>
	</select>
	<select id="getDeptIdByParentId" parameterType="string"
		resultType="string">
		<![CDATA[
			select distinct (dept_id) from sec_dept where dept_parent_id=#{dept_parent_id}
		]]>
	</select>
	<select id="getBurnEventByCdBarcode" parameterType="string" resultType="burnevent">
		<![CDATA[
			select eb.*,jp.job_status,su.user_name,sd.dept_name,ss.seclv_name,syu.usage_name,sp.project_name
			 from event_burn eb 
				left join job_process jp on(eb.job_code=jp.job_code)
				left join (select user_iidd,user_name,dept_id from sec_user) su on(eb.user_iidd=su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(eb.dept_id=sd.dept_id)
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (eb.seclv_code=ss.seclv_code)
				left join sys_usage syu on(eb.usage_code=syu.usage_code)
				left join sys_project sp on (eb.project_code=sp.project_code)
			where cd_barcode=#{cd_barcode}
		]]>
	</select>
	<insert id="addEntityCD" parameterType="entitycd">
		<![CDATA[
			insert into entity_cd(cd_barcode,user_name,user_iidd,dept_name,dept_id,duty_user_iidd,duty_user_name,duty_dept_id,duty_dept_name,burn_time,burn_machine,burn_ipaddress,cd_type,seclv_code,burn_result,file_num,file_list,event_code,expire_time) 
			    values(#{cd_barcode},#{user_name},#{user_iidd},#{dept_name},#{dept_id},#{duty_user_iidd},#{duty_user_name},#{duty_dept_id},#{duty_dept_name},#{burn_time},#{burn_machine},#{burn_ipaddress},#{cd_type},#{seclv_code},#{burn_result},#{file_num},#{file_list},#{event_code},#{expire_time})
		]]>
	</insert>
	<select id="getSeclv_code" parameterType="string" resultType="Integer">
		<![CDATA[
			select top 1 seclv_code from SEC_USER_SECLV where seclv_name=#{seclv_name}
		]]>
	</select>
	<select id="getUser_iidd" parameterType="string" resultType="string">
		<![CDATA[
			select top 1 user_iidd from SEC_USER where user_name=#{user_name}
		]]>
	</select>
	<select id="getDept_id" parameterType="string" resultType="string">
		<![CDATA[
			select top 1 dept_id from SEC_DEPT where dept_name=#{dept_name}
		]]>
	</select>
	<select id="getPaperListByEventCode" parameterType="string" resultType="entitypaper">
		<![CDATA[
			select ed.*,sus.seclv_name from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			where ed.event_Code=#{event_Code}
		]]>
	</select>
	<select id="getCDListByEventCode" parameterType="string" resultType="entitycd">
		<![CDATA[
			select ed.*,sus.seclv_name from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			where ed.event_code=#{event_code}
		]]>
	</select>
	<select id="getBarcodeCompareByCode" parameterType="string" resultType="barcodecompare">
		<![CDATA[
			select * from BARCODE_COMPARE 
			where BARCODE=#{barcode}
		]]>
	</select>
	<update id="setPaperRemark" parameterType="map">
		<![CDATA[
		update entity_paper 
			set send_id= #{send_id}, 
			send_mode= #{send_mode}, 
			box_num= #{box_num},
			file_order_num= #{file_order_num}, 
			manage_opinion= #{manage_opinion},
			receive_id=#{receive_id}, 
			remark=#{remark}
			where paper_barcode=#{paper_barcode}
		]]>
	</update>
		<update id="updateRetrieveComment" parameterType="map">
		<![CDATA[
		update entity_paper set fail_remark = isnull(fail_remark+',','')+ #{comment} where paper_id=#{paper_id}
		]]>
	</update>
	<update id="updateRejectPaperComment" parameterType="map">
		<![CDATA[
		update entity_paper set fail_remark = isnull(fail_remark+',','')+ #{comment} where paper_id=#{paper_id}
		]]>
	</update>
	<select id="getDestroyPaperList" resultType="entitypaper" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,ep.keyword_content,dp.dept_cs
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)	
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('DESTROY_PAPER','DESTROY')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             ) 
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
		<choose>
			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
			</when>
			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
			</when>
			<otherwise>
   				<![CDATA[
			 		order by ed.print_time desc
				]]>
			</otherwise>
		</choose>
	</select>
	<select id="getFilePaperList" resultType="entitypaper" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,ep.keyword_content,dp.dept_cs
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('FILE_PAPER','FILE','PRINT_FILE','COPY_FILE','OUTCOPY_FILE')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
		<choose>
			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
			</when>
			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
			</when>
			<otherwise>
   				<![CDATA[
			 		order by ed.print_time desc
				]]>
			</otherwise>
		</choose>
	</select>
	<select id="getSendPaperList" resultType="entitypaper" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,jp.send_way,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,ep.keyword_content,dp.dept_cs
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status,send_way from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)	
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('SEND','SEND_PAPER','PRINT_SEND','COPY_SEND','OUTCOPY_SEND')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             ) 
		]]>
		<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
				and	ed.user_iidd = #{user_iidd}
				]]>
		</if>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
		<choose>
			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
			</when>
			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
			</when>
			<otherwise>
   				<![CDATA[
			 		order by ed.print_time desc
				]]>
			</otherwise>
		</choose>
	</select>
	<select id="getAllSendPaperSize" resultType="int" parameterType="map">
		<![CDATA[
			select count(1)
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)	
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('SEND','SEND_PAPER','PRINT_SEND','COPY_SEND','OUTCOPY_SEND')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             ) 
		]]>
		<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
				and	ed.user_iidd = #{user_iidd}
				]]>
		</if>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
	</select>
	<select id="getDelayPaperList" resultType="entitypaper" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,ep.keyword_content,dp.dept_cs
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('DELAY_PAPER','DELAY')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             ) 
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
		<choose>
			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
			</when>
			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
			</when>
			<otherwise>
   				<![CDATA[
			 		order by ed.print_time desc
				]]>
			</otherwise>
		</choose>
	</select>
	<select id="getDestroyCDList" resultType="entitycd" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,dp.dept_cs
			 from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)	
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('DESTROY','DESTROY_CD')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.burn_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.burn_time <= #{end_time}
			]]>
		</if>
		<if test="cd_barcode != null and cd_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
			]]>
		</if>
		<if test="file_list != null and file_list != ''">
  			<![CDATA[
		 		and UPPER(ed.file_list) LIKE UPPER('%'+#{file_list}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="cd_state != null and cd_state != ''">
  			<![CDATA[
		 		and ed.cd_state = #{cd_state}
			]]>
		</if>
		<choose>
			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
			</when>
			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
			</when>
			<otherwise>
   				<![CDATA[
			 		order by ed.burn_time desc
				]]>
			</otherwise>
		</choose>
	</select>
	<select id="getSendCDList" resultType="entitycd" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,jp.send_way,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,dp.dept_cs
			 from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status,send_way from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('SEND','SEND_CD','BURN_SEND')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
				and	ed.user_iidd = #{user_iidd}
				]]>
		</if>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.burn_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.burn_time <= #{end_time}
			]]>
		</if>
		<if test="cd_barcode != null and cd_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
			]]>
		</if>
		<if test="file_list != null and file_list != ''">
  			<![CDATA[
		 		and UPPER(ed.file_list) LIKE UPPER('%'+#{file_list}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="cd_state != null and cd_state != ''">
  			<![CDATA[
		 		and ed.cd_state = #{cd_state}
			]]>
		</if>
		<choose>
			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
			</when>
			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
			</when>
			<otherwise>
   				<![CDATA[
			 		order by ed.burn_time desc
				]]>
			</otherwise>
		</choose>
	</select>
	<select id="getFileCDList" resultType="entitycd" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,dp.dept_cs
			 from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('FILE','FILE_CD','BURN_FILE')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             ) 
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.burn_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.burn_time <= #{end_time}
			]]>
		</if>
		<if test="cd_barcode != null and cd_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
			]]>
		</if>
		<if test="file_list != null and file_list != ''">
  			<![CDATA[
		 		and UPPER(ed.file_list) LIKE UPPER('%'+#{file_list}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="cd_state != null and cd_state != ''">
  			<![CDATA[
		 		and ed.cd_state = #{cd_state}
			]]>
		</if>
		<choose>
			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
			</when>
			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
			</when>
			<otherwise>
   				<![CDATA[
			 		order by ed.burn_time desc
				]]>
			</otherwise>
		</choose>
	</select>
	<select id="getDelayCDList" resultType="entitycd" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,dp.dept_cs
			 from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('DELAY','DELAY_CD')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             ) 
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.burn_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.burn_time <= #{end_time}
			]]>
		</if>
		<if test="cd_barcode != null and cd_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
			]]>
		</if>
		<if test="file_list != null and file_list != ''">
  			<![CDATA[
		 		and UPPER(ed.file_list) LIKE UPPER('%'+#{file_list}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="cd_state != null and cd_state != ''">
  			<![CDATA[
		 		and ed.cd_state = #{cd_state}
			]]>
		</if>
		<choose>
			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
			</when>
			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
			</when>
			<otherwise>
   				<![CDATA[
			 		order by ed.burn_time desc
				]]>
			</otherwise>
		</choose>
	</select>
	<insert id="addSendDestroyEvent" parameterType="senddestroyevent">					
		<![CDATA[
			insert into EVENT_SENDDESTROY(
				event_code,
				user_iidd,
				dept_id,
				seclv_code,
				entity_type,
				barcode,
				project_code,
				usage_code,
				summ,
				apply_time,
				senddestroy_status,
				job_code
			)values(#{event_code},
				#{user_iidd},
				#{dept_id},
				#{seclv_code},
				#{entity_type},
				#{barcode},
				#{project_code},
				#{usage_code},
				#{summ},
				#{apply_time},
				#{senddestroy_status},
				#{job_code}
				)
		]]>
	</insert>
	<select id="getSendDestroyPaperJobList" parameterType="map"
		resultType="processjob">
		<![CDATA[
			select distinct jp.*,ss.seclv_name,su.user_name,sd.dept_name
			from job_process jp
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (jp.seclv_code=ss.seclv_code)
				left join (select user_iidd,user_name from sec_user) su on (jp.user_iidd = su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(jp.dept_id = sd.dept_id)
				left join (select job_code,entity_type from event_senddestroy) event on(jp.job_code = event.job_code)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			event.entity_type='PAPER'
			<if test="user_iidd != null and user_iidd != ''">
   				<![CDATA[
			 		and jp.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and jp.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="jobType_code != null and jobType_code != ''">
   				<![CDATA[
			 		and jp.jobtype_code = #{jobType_code}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and jp.start_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and jp.start_time <= #{endTime}
				]]>
			</if>
		</trim>
		order by start_time desc
	</select>
	<select id="getSendDestroyCDJobList" parameterType="map"
		resultType="processjob">
		<![CDATA[
			select distinct jp.*,ss.seclv_name,su.user_name,sd.dept_name
			from job_process jp
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (jp.seclv_code=ss.seclv_code)
				left join (select user_iidd,user_name from sec_user) su on (jp.user_iidd = su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(jp.dept_id = sd.dept_id)
				left join (select job_code,entity_type from event_senddestroy) event on(jp.job_code = event.job_code)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			event.entity_type='CD'
			<if test="user_iidd != null and user_iidd != ''">
   				<![CDATA[
			 		and jp.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and jp.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="jobType_code != null and jobType_code != ''">
   				<![CDATA[
			 		and jp.jobtype_code = #{jobType_code}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and jp.start_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and jp.start_time <= #{endTime}
				]]>
			</if>
		</trim>
		order by start_time desc
	</select>
	<select id="getSendDestroyEventListByJobCode" parameterType="string"
		resultType="senddestroyevent">
		<![CDATA[
			select * from event_senddestroy 
			where job_code = #{job_code}
		]]>
	</select>
	<update id="cancelSendDestroyPaperEventByEventCode"
		parameterType="string">
		<![CDATA[
			update entity_paper set paper_state=1 
			where paper_barcode=(select barcode from  event_senddestroy where event_code=#{event_code})
		]]>
		<![CDATA[
			delete from event_senddestroy where event_code=#{event_code}
		]]>
	</update>
	<update id="cancelSendDestroyCDEventByEventCode" parameterType="string">
		<![CDATA[
			update entity_cd set cd_state=1 
			where cd_barcode=(select barcode from  event_senddestroy where event_code=#{event_code})
		]]>
		<![CDATA[
			delete from event_senddestroy where event_code=#{event_code}
		]]>
	</update>
	<update id="cancelJobByJobCode" parameterType="string">
   		<![CDATA[
			delete from job_process where job_code= #{job_code}
		]]>
	</update>
	<update id="updateDelayDays" parameterType="map">
   		<![CDATA[
			update entity_paper set delay_days=#{delay_days} where paper_barcode=#{paper_barcode};
		]]>
	</update>
	<update id="updateCDDelayDays" parameterType="map">
   		<![CDATA[
			update entity_cd set delay_days=#{delay_days} where cd_barcode=#{cd_barcode};
		]]>
	</update>
	<select id="getPaperConversionRate" resultType="papertype">
		<![CDATA[
			select * from paper_conversion_rate
		]]>
	</select>

	<update id="deletePaperConversionRateByTypeName" parameterType="string">
   		<![CDATA[
			delete from PAPER_CONVERSION_RATE where TYPE_NAME= #{type_name}
		]]>
	</update>
	<update id="updatePaperConversionRateByTypeName" parameterType="map">
   		<![CDATA[
			update PAPER_CONVERSION_RATE  set conversion_rate = #{conversion_rate} where TYPE_NAME= #{type_name}
		]]>
	</update>
	<update id="addPaperConversionRateByTypeName" parameterType="map">
   		<![CDATA[
			insert into PAPER_CONVERSION_RATE (type_name ,conversion_rate) values (#{type_name},#{conversion_rate})
		]]>
	</update>
	<update id="addOrUpdateFailRemarkByBarcode" parameterType="map">
   		<![CDATA[
			update ENTITY_PAPER set FAIL_REMARK =FAIL_REMARK + #{commnet} WHERE PAPER_BARCODE = #{barcode}
		]]>
	</update>
	<update id="addOrUpdateFailRemarkByBarcodeAndTime"
		parameterType="map">
   		<![CDATA[
			update ENTITY_PAPER set FAIL_REMARK =FAIL_REMARK + #{commnet} ,DESTROY_TIME = getdate() WHERE PAPER_BARCODE = #{barcode}
		]]>
	</update>
	<select id="getAllReplacePaperList" resultType="entitypaper"
		parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select distinct ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,jp.output_user_name,jp.output_dept_name,ep.keyword_content,dp.dept_cs
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status,output_user_name,output_dept_name from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)	
			 left join (select barcode,job_code from event_senddestroy) sd_event on (sd_event.barcode = ed.paper_barcode)
			 left join (select job_code,job_status from job_process) sd_job on(sd_event.job_code = sd_job.job_code)
			 right join (select distinct PID_barcode from entity_paper where PID_barcode is not null or PID_barcode!='')  pid on ed.paper_barcode = pid.pid_barcode
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
   				<![CDATA[
			 		and ed.duty_user_iidd = #{user_iidd} 
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_user_name) LIKE UPPER('%'+#{duty_user_name}+'%') 
				]]>
			</if>
			<if test="dept_name != null and dept_name != ''">
   				<![CDATA[
			 		and ed.dept_name = #{dept_name}
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and ed.user_name = #{user_name}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
   				<![CDATA[
			 		and ed.print_time >= #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
   				<![CDATA[
			 		and ed.print_time <= #{end_time}
				]]>
			</if>
			<if test="paper_barcode != null and paper_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
				]]>
			</if>
			<if test="create_type != null and create_type != ''">
   				<![CDATA[
			 		and ed.create_type = #{create_type}
				]]>
			</if>
			<if test="paper_state != null and paper_state != ''">
   				<![CDATA[
			 		and ed.paper_state = #{paper_state}
				]]>
			</if>
			<if test="retrieve_replace != null and retrieve_replace != ''">
   				<![CDATA[
			 		and ed.retrieve_replace = #{retrieve_replace}
				]]>
			</if>
			<if test="supervise_user_iidd != null and supervise_user_iidd != ''">
   				<![CDATA[
			 		and ed.supervise_user_iidd = #{supervise_user_iidd}
				]]>
			</if>
		</trim>
			and ed.paper_barcode in (select PID_barcode from entity_paper where PID_barcode is not null or PID_barcode!='') order by print_time desc
	</select>
	<select id="getAllReplacePaperSize" resultType="int"
		parameterType="map">
		<![CDATA[
			select count(distinct ed.paper_barcode) from entity_paper ed
			left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			left join (select barcode,job_code from event_senddestroy) sd_event on (sd_event.barcode = ed.paper_barcode)
			left join (select job_code,job_status from job_process) sd_job on(sd_event.job_code = sd_job.job_code)
			right join (select distinct PID_barcode from entity_paper where PID_barcode is not null or PID_barcode!='')  pid on ed.paper_barcode = pid.pid_barcode
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
   				<![CDATA[
			 		and ed.duty_user_iidd = #{user_iidd} 
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_user_name) LIKE UPPER('%'+#{duty_user_name}+'%') 
				]]>
			</if>
			<if test="dept_name != null and dept_name != ''">
   				<![CDATA[
			 		and ed.dept_name = #{dept_name}
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and ed.user_name = #{user_name}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
   				<![CDATA[
			 		and ed.print_time >= #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
   				<![CDATA[
			 		and ed.print_time <= #{end_time}
				]]>
			</if>
			<if test="paper_barcode != null and paper_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
				]]>
			</if>
			<if test="create_type != null and create_type != ''">
   				<![CDATA[
			 		and ed.create_type = #{create_type}
				]]>
			</if>
			<if test="paper_state != null and paper_state != ''">
   				<![CDATA[
			 		and ed.paper_state = #{paper_state}
				]]>
			</if>
			<if test="retrieve_replace != null and retrieve_replace != ''">
   				<![CDATA[
			 		and ed.retrieve_replace = #{retrieve_replace}
				]]>
			</if>
			<if test="supervise_user_iidd != null and supervise_user_iidd != ''">
   				<![CDATA[
			 		and ed.supervise_user_iidd = #{supervise_user_iidd}
				]]>
			</if>
		</trim>
			and ed.paper_barcode in (select PID_barcode from entity_paper where PID_barcode is not null or PID_barcode!='')
	</select>
	<update id="updateRetrievedPage" parameterType="map">
		<![CDATA[
			update entity_paper set retrieve_pagenum=#{retrieve_pagenum},fail_remark=#{fail_remark},retrieve_replace=#{retrieve_replace} where paper_id=#{paper_id}
		]]>
	</update>
	<select id="getPIDBarcode" resultType="string">
		<![CDATA[
			select PID_barcode from entity_paper where PID_barcode is not null or PID_barcode!=''
		]]>
	</select>
	<select id="getPaperBarcode" resultType="string" parameterType="string">
		<![CDATA[
			select paper_barcode from entity_paper where PID_barcode=#{barcode}
		]]>
	</select>
	<select id="getPIDPagenum" resultType="string" parameterType="string">
		<![CDATA[
			select PID_pagenum from entity_paper where paper_barcode=#{PID_barcode}
		]]>
	</select>
	<update id="updateDestroyedPage" parameterType="map">
		<![CDATA[
			update entity_paper set destroy_pagenum=#{destroy_pagenum},fail_remark=#{fail_remark},retrieve_replace=#{retrieve_replace} where paper_id=#{paper_id}
		]]>
	</update>
	<insert id="addEventModify" parameterType="eventmodify">
		<![CDATA[
			insert into event_modify(
			   event_code,
			   user_iidd,
			   dept_id,
			   seclv_code,
			   entity_type,
			   barcode,
			   pre_seclv,
			   trg_seclv,
			   pre_scope,
			   trg_scope,
			   pre_timelimit,
			   trg_timelimit,
			   summ,
			   apply_time,
			   finish_time,
			   modify_status,
			   project_code,
			   job_code,
			   ext_column
			)values(
			#{event_code},
			#{user_iidd},
			#{dept_id},
			#{seclv_code},
			#{entity_type},
			#{barcode},
			#{pre_seclv},
			#{trg_seclv},
			#{pre_scope},
			#{trg_scope},
			#{pre_timelimit},
			#{trg_timelimit},
			#{summ},
			#{apply_time},
			#{finish_time},
			#{modify_status},
			#{project_code},
			#{job_code},
			#{ext_column}
			)
		]]>
	</insert>
	<update id="updateEventModifyJobCode" parameterType="map">
		<![CDATA[
			update event_modify
				set job_code=#{job_code}
			where event_code=#{event_code}
		]]>
	</update>
	<select id="getModifyProcessJobListByInstanceId" resultType="processjob">
		<![CDATA[
			select distinct jp.*,ss.seclv_name,su.user_name,sd.dept_name,ei.file_type
			from job_process jp
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (jp.seclv_code=ss.seclv_code)
				left join (select user_iidd,user_name from sec_user) su on (jp.user_iidd = su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(jp.dept_id = sd.dept_id)
				left join (select job_code,file_type from event_import) ei on (jp.job_code=ei.job_code)
			where jp.instance_id in
		]]>
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
		order by start_time desc
	</select>
	<select id="getModifyEventListByJobCode" parameterType="string" resultType="eventmodify">
		<![CDATA[
			select em.*,jp.jobType_code as jobType,jp.job_status,su.user_name,sd.dept_name,ss.seclv_name,sp.seclv_name as pre_seclv_name,st.seclv_name as trg_seclv_name
			 from event_modify em
				left join job_process jp on(em.job_code=jp.job_code)
				left join (select user_iidd,user_name,dept_id from sec_user) su on(em.user_iidd=su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(em.dept_id=sd.dept_id)
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (em.seclv_code=ss.seclv_code)
				left join (select seclv_code,seclv_name from sec_user_seclv) sp on (em.pre_seclv=sp.seclv_code)
				left join (select seclv_code,seclv_name from sec_user_seclv) st on (em.trg_seclv=st.seclv_code)
			where em.job_code = #{job_code}
			order by start_time desc
		]]>
	</select>
		<select id="getModifyEventListByBarcode" parameterType="string" resultType="eventmodify">
		<![CDATA[
			select em.*,jp.jobType_code as jobType,jp.job_status,su.user_name,sd.dept_name,ss.seclv_name
			 from event_modify em
				left join job_process jp on(em.job_code=jp.job_code)
				left join (select user_iidd,user_name,dept_id from sec_user) su on(em.user_iidd=su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(em.dept_id=sd.dept_id)
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (em.seclv_code=ss.seclv_code)
			where em.barcode = #{barcode}
			order by start_time desc
		]]>
	</select>
	<select id="getModifyEventByCode" parameterType="string" resultType="eventmodify">
		<![CDATA[
			select em.*,jp.job_status,su.user_name,sd.dept_name,ss.seclv_name
			 from event_modify em 
				left join job_process jp on(em.job_code=jp.job_code)
				left join (select user_iidd,user_name,dept_id from sec_user) su on(em.user_iidd=su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(em.dept_id=sd.dept_id)
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (em.seclv_code=ss.seclv_code)
			where em.event_code=#{event_code}
		]]>
	</select>
		<select id="getModifyEventByJobCode" parameterType="string" resultType="eventmodify">
		<![CDATA[
			select em.*,jp.job_status,su.user_name,sd.dept_name,ss.seclv_name
			 from event_modify em 
				left join job_process jp on(em.job_code=jp.job_code)
				left join (select user_iidd,user_name,dept_id from sec_user) su on(em.user_iidd=su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(em.dept_id=sd.dept_id)
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (em.seclv_code=ss.seclv_code)
			where em.job_code=#{job_code}
		]]>
	</select>
	<select id="getModifyJobCodeByEventCode" parameterType="string" resultType="string">
		<![CDATA[
			select job_code	from event_modify where event_code = #{event_code}
		]]>
	</select>
	<update id="updateConfirmModifyEvent" parameterType="map">
		<![CDATA[
			update event_modify set
				finish_time=#{finish_time},
				modify_status=#{modify_status}
			where event_code=#{event_code}
		]]>
	</update>
	<select id="getModifyEventList" parameterType="map" resultType="eventmodify">
		<![CDATA[
			select e.*,ss.seclv_name,su.user_name,sd.dept_name,sp.project_name,jp.job_status
			from event_modify e
			left join job_process jp on(e.job_code=jp.job_code)
			left join (select seclv_code,seclv_name from sec_user_seclv) ss on (e.seclv_code=ss.seclv_code)
			left join (select user_iidd,user_name,dept_id from sec_user) su on(e.user_iidd=su.user_iidd)
			left join (select dept_id,dept_name from sec_dept) sd on(e.dept_id=sd.dept_id)
			left join sys_project sp on(e.project_code=sp.project_code)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		
			<if test="user_iidd != null and user_iidd != ''">
   				<![CDATA[
			 		and e.user_iidd = #{user_iidd} 
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and e.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and e.duty_user_name = #{duty_user_name}
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and e.apply_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and e.apply_time <= #{endTime}
				]]>
			</if>
			<if test="entity_type != null and entity_type != ''">
   				<![CDATA[
			 		and e.entity_type = #{entity_type}
				]]>
			</if>
			<if test="job_status != null and job_status != ''" >
				<![CDATA[
					and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="barcode != null and barcode != ''">
   				<![CDATA[
			 		and UPPER(e.barcode) LIKE UPPER('%'+#{barcode}+'%')
				]]>
			</if>
			<if test="modify_status != null and modify_status != ''">
   				<![CDATA[
			 		and e.modify_status = #{modify_status}
				]]>
			</if>
		</trim>
		<![CDATA[
			 order by e.apply_time desc
		]]>
	</select>
	<update id="updatePaperState" parameterType="map">
		<![CDATA[
             update entity_paper 
		]]>
		<trim prefix="set" prefixOverrides=",">
			<if test="paper_state != null" >
	 			<![CDATA[
		 			 ,paper_state = #{paper_state}
				]]>
	 		</if>
	 		<if test="job_code != null and job_code != ''" >
	 			<![CDATA[
		 			,job_code = #{job_code}
				]]>
	 		</if>
	 		<if test="scope != null and scope != ''" >
	 			<![CDATA[
		 			,scope = #{scope}
				]]>
	 		</if>
	 		<if test="scope_dept_id != null and scope_dept_id != ''" >
	 			<![CDATA[
		 			,scope_dept_id = #{scope_dept_id}
				]]>
	 		</if>
	 		<if test="scope_dept_name != null and scope_dept_name != ''" >
	 			<![CDATA[
		 			,scope_dept_name = #{scope_dept_name}
				]]>
	 		</if>
	 		<if test="cancel" >
	 			<![CDATA[
		 			,job_code = null
				]]>
	 		</if>
	 		<if test="page_count != null " >
	 			<![CDATA[
		 			,page_count = #{page_count}
				]]>
	 		</if>
	 		<if test="file_title != null and scope_dept_name != '' " >
	 			<![CDATA[
		 			,file_title = #{file_title}
				]]>
	 		</if>
 		</trim>
 		where paper_barcode = #{paper_barcode}
	</update>
	<update id="confirmEntityPaper" parameterType="map">
		<![CDATA[
			update entity_paper 
				set paper_state = #{paper_state} ,
				    seclv_code = #{seclv_code}
			where paper_barcode = #{paper_barcode}
		]]>
	</update>
	<select id="getCountModifyEvent" parameterType="int" resultType="int">
		<![CDATA[
			select count(1) from event_modify ;
		]]>
	</select>
	<select id="getAllEventModifySize" resultType="int"	parameterType="map">
		<![CDATA[
			select count(em.barcode) from event_modify em
			left join sec_user_seclv sus on(em.seclv_code=sus.seclv_code)
			left join (select job_code,jobtype_code,job_status from job_process) jp on(em.job_code = jp.job_code)
			left join entity_paper ep on(ep.paper_barcode = em.barcode)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and em.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="barcode != null and barcode != ''">
				<![CDATA[
					and em.barcode = #{barcode}
				]]>
			</if>
			<if test="entity_type != null and entity_type != ''">
				<![CDATA[
					and em.entity_type = #{entity_type}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
				<![CDATA[
					and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
				<![CDATA[
					and ep.file_title = #{file_title}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
				<![CDATA[
					and em.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
				<![CDATA[
					and ep.start_time = #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
				<![CDATA[
					and ep.start_time = #{start_time}
				]]>
			</if>
		</trim>
	</select>
	<select id="getAllEventModifyList" resultType="eventmodify" parameterType="map">
		<![CDATA[
			select distinct em.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,dp.dept_cs,ep.*
			 from event_modify em 
			 left join sec_user_seclv sus on(em.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(em.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(em.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) su on(su.user_iidd = em.user_iidd)	
			 left join sec_dept dp on(em.dept_id = dp.dept_id)
			 left join entity_paper ep on(em.barcode=ep.paper_barcode)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and em.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="barcode != null and barcode != ''">
				<![CDATA[
					and em.barcode = #{barcode}
				]]>
			</if>
			<if test="entity_type != null and entity_type != ''">
				<![CDATA[
					and em.entity_type = #{entity_type}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
				<![CDATA[
					and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
				<![CDATA[
					and ep.file_title = #{file_title}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
				<![CDATA[
					and em.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
				<![CDATA[
					and ep.start_time = #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
				<![CDATA[
					and ep.start_time = #{start_time}
				]]>
			</if>
		</trim>
	</select>
	<select id="getSeclvNameByCode"  resultType="string" parameterType="int" >
		<![CDATA[
			select seclv_name from sec_user_seclv where seclv_code = #{seclv_code}
		]]>
	</select>
	<update id="deleteEventModifyByBarcode" parameterType="string">
   		<![CDATA[
			delete from event_modify where event_code= #{event_code}
		]]>
	</update>
	<update id="updateCDState" parameterType="map">
		<![CDATA[
			update entity_cd 
		]]>	
		<trim prefix="set" prefixOverrides=",">
			<if test="cd_state != null" >
	 			<![CDATA[
		 			 ,cd_state = #{cd_state}
				]]>
	 		</if>
	 		<if test="job_code != null and job_code != ''" >
	 			<![CDATA[
		 			,job_code = #{job_code}
				]]>
	 		</if>
	 		<if test="scope != null and scope != ''" >
	 			<![CDATA[
		 			,scope = #{scope}
				]]>
	 		</if>
	 		<if test="scope_dept_id != null and scope_dept_id != ''" >
	 			<![CDATA[
		 			,scope_dept_id = #{scope_dept_id}
				]]>
	 		</if>
	 		<if test="scope_dept_name != null and scope_dept_name != ''" >
	 			<![CDATA[
		 			,scope_dept_name = #{scope_dept_name}
				]]>
	 		</if>
	 		<if test="cancel" >
	 			<![CDATA[
		 			,job_code = null
				]]>
	 		</if>
 		</trim>			
			where cd_barcode = #{cd_barcode}
	</update>
	<update id="confirmEntityCD" parameterType="map">
		<![CDATA[
			update entity_cd
				set cd_state = #{cd_state} ,
				    seclv_code = #{seclv_code}
			where cd_barcode = #{cd_barcode}
		]]>
	</update>
	<select id="getEventModifyByEntityType" parameterType="string" resultType="eventmodify">
		<![CDATA[
			select * from event_modify where entity_type = #{entity_type}
		]]>
	</select>
	<select id="getAllEventCDModifySize" resultType="int"	parameterType="map">
		<![CDATA[
			select count(em.barcode) from event_modify em
			left join sec_user_seclv sus on(em.seclv_code=sus.seclv_code)
			left join (select job_code,jobtype_code,job_status from job_process) jp on(em.job_code = jp.job_code)
			left join entity_cd ep on(ep.cd_barcode = em.barcode)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and em.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="barcode != null and barcode != ''">
				<![CDATA[
					and em.barcode = #{barcode}
				]]>
			</if>
			<if test="entity_type != null and entity_type != ''">
				<![CDATA[
					and em.entity_type = #{entity_type}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
				<![CDATA[
					and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
				<![CDATA[
					and em.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
				<![CDATA[
					and ep.start_time = #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
				<![CDATA[
					and ep.start_time = #{start_time}
				]]>
			</if>
		</trim>
	</select>
	<select id="getAllEventCDModifyList" resultType="eventmodify" parameterType="map">
		<![CDATA[
			select distinct em.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,dp.dept_cs,ep.*
			 from event_modify em 
			 left join sec_user_seclv sus on(em.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(em.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(em.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) su on(su.user_iidd = em.user_iidd)	
			 left join sec_dept dp on(em.dept_id = dp.dept_id)
			 left join entity_cd ep on(em.barcode=ep.cd_barcode)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and em.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="barcode != null and barcode != ''">
				<![CDATA[
					and em.barcode = #{barcode}
				]]>
			</if>
			<if test="entity_type != null and entity_type != ''">
				<![CDATA[
					and em.entity_type = #{entity_type}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
				<![CDATA[
					and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
				<![CDATA[
					and ep.file_title = #{file_title}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
				<![CDATA[
					and em.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
				<![CDATA[
					and ep.start_time = #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
				<![CDATA[
					and ep.start_time = #{start_time}
				]]>
			</if>
		</trim>
	</select>
	<update id="updateModifyPaperState" parameterType="map">
		<![CDATA[
			update entity_paper set paper_state = #{paper_state} where paper_barcode=#{paper_barcode}
		]]>
	</update>
	<update id="updateModifyCDState" parameterType="map">
		<![CDATA[
			update entity_cd set cd_state = #{cd_state} where cd_barcode=#{cd_barcode}
		]]>
	</update>
	<select id="getJobcodeByPaperid" parameterType="string" resultType="string">
		<![CDATA[
			select job_code from entity_paper where paper_id=#{paper_id}
		]]>
	</select>
	<select id="getAllReceiptSize" parameterType="string" resultType="int">
		<![CDATA[
			select count(1) from entity_paper where job_code =#{job_code}
		]]>
	</select>
	<select id="getAllUnprintReceiptSize" parameterType="string" resultType="int">
		<![CDATA[
			select count(1) from event_print where job_code =#{job_code} and print_status=0
		]]>
	</select>
	<select id="getAllUncopyReceiptSize" parameterType="string" resultType="int">
		<![CDATA[
			select count(1) from event_copy where job_code =#{job_code} and copy_status=0
		]]>
	</select>
	<update id="updateReceipInfo" parameterType="string">
		<![CDATA[
		update job_process set is_receipt = 'Y' where job_code=#{job_code}
		]]>
	</update>
	<select id="getJobcodeByCDid" parameterType="string" resultType="string">
		<![CDATA[
			select job_code from entity_cd where cd_id=#{cd_id}
		]]>
	</select>
	<select id="getAllReceiptCDSize" parameterType="string" resultType="int">
		<![CDATA[
			select count(1) from entity_cd where job_code =#{job_code}
		]]>
	</select>
	<select id="getAllUnCDReceiptSize" parameterType="string" resultType="int">
		<![CDATA[
			select count(1) from event_burn where job_code =#{job_code} and burn_status=0
		]]>
	</select>



	<update id="updateCDJobCodeByBarCode" parameterType="map">
		<![CDATA[
			update entity_cd set job_code=#{job_code} 
			where cd_barcode=#{barcode}
		]]>
	</update>

	<update id="updatePaperJobCodeByBarCode" parameterType="map">
		<![CDATA[
			update entity_paper set job_code=#{job_code} 
			where paper_barcode=#{barcode}
		]]>
	</update>


	<insert id="addEventCarryOutPaper" parameterType="eventcarryout">
	<![CDATA[
		insert into EVENT_CARRYOUT(
			   EVENT_CODE,
		       USER_IIDD,
		       DEPT_ID,
		       ENTITY_TYPE,
		       BARCODE,
		       PROJECT_CODE,
		       CARRYOUT_INFO,
		       CARRYIN_INFO,
		       APPROVAL_CODE,
		       START_TIME,
		       END_TIME,
		       SECLV_CODE,
		       USAGE_CODE,
		       SUMM,
		       FINISH_TIME,
		       CARRYOUT_STATUS,
		       JOB_CODE,
		       EXT_COLUMN
			)values(
				   #{event_Code},
			       #{user_Iidd},
			       #{dept_Id},
			       #{entity_Type},
			       #{barcode},
			       #{project_Code},
			       #{carryout_Info},
			       #{carryin_Info},
			       #{approval_Code},
			       #{start_Time},
			       #{end_Time},
			       #{seclv_Code},
			       #{usage_Code},
			       #{summ},
			       #{finish_Time},
			       #{carryout_Status},
			       #{job_Code},
			       #{ext_Column}
				)
		]]>
	</insert>


	<select id="getEventCarryOutListByJobCode" parameterType="string"
		resultType="eventcarryout">
		<![CDATA[
			select * from event_carryout
			where job_code = #{job_code}
		]]>
	</select>


	<select id="getHandleCarryOutJobListByEntityInstanceId"
		parameterType="map" resultType="eventcarryoutprocessjob">
		
		<![CDATA[
			select jp.*,ss.seclv_name,su.user_name,sd.dept_name,ee.entity_type
			from job_process jp
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (jp.seclv_code=ss.seclv_code)
				left join (select user_iidd,user_name from sec_user) su on (jp.user_iidd = su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(jp.dept_id = sd.dept_id)
				left join (select job_code,entity_type from event_carryout) ee on (jp.job_code=ee.job_code)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and jp.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and UPPER(su.user_name) like UPPER('%'+#{user_name}+'%')
				]]>
			</if>


			<if test="entity_type != null and entity_type != ''">
   				<![CDATA[
			 		and ee.entity_type=#{entity_type}
				]]>
			</if>


			<if test="instanceIds != null and instanceIds != ''">
				and instance_id in
				<foreach item="item" index="index" collection="instanceIds"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</trim>
	</select>
	<select id="getCarryOutJobList" parameterType="map" resultType="processjob" resultSetType="SCROLL_SENSITIVE">
		
		
		<![CDATA[
			select distinct jp.*,ss.seclv_name,su.user_name,sd.dept_name
			from job_process jp
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (jp.seclv_code=ss.seclv_code)
				left join (select user_iidd,user_name from sec_user) su on (jp.user_iidd = su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(jp.dept_id = sd.dept_id)
				left join (select job_code,entity_type from event_carryout) event on(jp.job_code = event.job_code)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="entity_type != null and entity_type != ''">
   				<![CDATA[
			 		and event.entity_type = #{entity_type}
				]]>
			</if>

			<if test="user_iidd != null and user_iidd != ''">
   				<![CDATA[
			 		and jp.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and jp.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="jobType_code != null and jobType_code != ''">
   				<![CDATA[
			 		and jp.jobtype_code = #{jobType_code}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and jp.start_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and jp.start_time <= #{endTime}
				]]>
			</if>
		</trim>
		order by start_time desc
	</select>
	<select id="getCarryOutConfirmEventList" resultType="eventout"
		parameterType="map">
		
		
		<![CDATA[
			select ec.*,jp.jobType_code as jobType,jp.job_status,ss.seclv_name,syu.usage_name,su.user_name,sd.dept_name,jp.send_way
			from event_carryout ec
				left join (select job_code,jobtype_code,job_status,send_way from job_process) jp on (ec.job_code=jp.job_code)
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (ec.seclv_code=ss.seclv_code)
				left join sys_usage syu on(ec.usage_code=syu.usage_code)
				left join (select user_iidd,user_name from sec_user) su on (ec.user_iidd = su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(ec.dept_id = sd.dept_id)		
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">


			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and ss.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="jobType_code != null and jobType_code != ''">
   				<![CDATA[
			 		and jp.jobtype_code = #{jobType_code}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and ec.start_time >= #{startTime}
				]]>
			</if>

			<if test="carryoutStatus != null">
   				<![CDATA[
			 		and ec.carryout_Status =#{carryoutStatus}
				]]>
			</if>



			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and ec.start_time <= #{endTime}
				]]>
			</if>
		</trim>
		order by start_time desc
	</select>

	<update id="updateEventCarryOutCarryoutStatusById"
		parameterType="map">
		<![CDATA[
			update event_carryout 
			set finish_Time=#{finish_Time},
				carryout_Status=#{carryout_Status},
				carryin_Info=#{carryinInfo},
				summ = isnull(summ,'')+ #{output_confidential_num}			 
			where id=#{id}
			
		]]>
	</update>

	<select id="getEventCarryOutById" parameterType="int"
		resultType="eventcarryout">
		<![CDATA[
			select *from event_carryout where id=#{id}
		]]>
	</select>


	<select id="getEventOutById" resultType="eventout"
		parameterType="int">
		
		
		<![CDATA[
			select ec.*,jp.jobType_code as jobType,jp.job_status,ss.seclv_name,syu.usage_name,su.user_name,sd.dept_name
			from event_carryout ec
				left join (select job_code,jobtype_code,job_status from job_process) jp on (ec.job_code=jp.job_code)
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (ec.seclv_code=ss.seclv_code)
				left join sys_usage syu on(ec.usage_code=syu.usage_code)
				left join (select user_iidd,user_name from sec_user) su on (ec.user_iidd = su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(ec.dept_id = sd.dept_id)
				where ec.id=#{id}		
		]]>
	</select>

	<select id="getSysSecLevelN" parameterType="map" resultType="int">
		<![CDATA[
			select sus.seclv_code from sec_user_seclv sus 
				left join sys_seclevel ssl on(ssl.seclv_code = sus.seclv_code)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="is_paper_audit != null and is_paper_audit != ''">
   				<![CDATA[
			 		and is_paper_audit = #{is_paper_audit}
				]]>
			</if>
			<if test="is_cd_audit != null and is_cd_audit != ''">
   				<![CDATA[
			 		and is_cd_audit = #{is_cd_audit}
				]]>
			</if>
		</trim>
	</select>
	
	
	
	<select id="checkOrCarryIn" parameterType="map" resultType="int">
		<![CDATA[
			select count(1) From event_carryout ec
			left join (select job_code,jobtype_code,job_status from job_process) jp on(jp.job_code = ec.job_code)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="barcodes != null and barcodes != ''">
				and barcode in
				<foreach item="item" index="index" collection="barcodes"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</trim>
		and carryout_status=0 and job_status='true'
	</select>
	
	<select id="getRecycleSeclCode" resultType="int">
		<![CDATA[
			select seclv_code from sys_seclevel where archive_time != 0
		]]>
	</select>
	<select id="getAllPaperRecycleLedgerSize" resultType="int"
		parameterType="map">
		<![CDATA[
			select count(distinct ed.paper_barcode) from entity_paper ed
			left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			left join (select barcode,job_code from event_senddestroy) sd_event on (sd_event.barcode = ed.paper_barcode)
			left join (select job_code,job_status from job_process) sd_job on(sd_event.job_code = sd_job.job_code)
			left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)
		
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and ed.duty_user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="event_ids != null and event_ids != ''" >
				and ed.paper_barcode in 
				<foreach item="item" index="index" collection="event_ids" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="barcodes != null and barcodes != ''" >
				and ed.paper_barcode in 
				<foreach item="item" index="index" collection="barcodes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="user_id != null and user_id != ''">
				<![CDATA[
					and ed.user_iidd = #{user_id}
				]]>
			</if>
			<if test="is_print_result">
				<![CDATA[
					and ed.paper_state in (0, 8, 9)
				]]>
			</if>
			<if test="is_graph">
				<![CDATA[
					and ep.print_type=2
				]]>
			</if>
			<if test="is_retrieve">
				<![CDATA[
					and ed.paper_state = 0  and ed.job_code is null
				]]>
			</if>
			<if test="is_transfer">
				<![CDATA[
					and ed.paper_state = 0
				]]>
			</if>
			<if test="is_recycled">
				<![CDATA[
					and ed.paper_state =1
				]]>
			</if>
			<if test="is_sendes">
				<![CDATA[
					and ed.paper_state =1
				]]>
			</if>
			<if test="is_sendes_1">
				<![CDATA[
					and ed.paper_state =11
				]]>
			</if>
			<if test="is_retrieved">
				<![CDATA[
					and ed.paper_state = 11 and jp.job_status = 'true'
				]]>
			</if>
			<if test="is_handle">
				<![CDATA[
					and ed.paper_state = 0
				]]>
			</if>
			<if test="has_job_code">
				<![CDATA[
					and ed.job_code is not null and ed.job_code != ''
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''" >
				and ed.seclv_code in 
				<foreach item="item" index="index" collection="seclv_code" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="is_reprint != null and is_reprint != ''">
   				<![CDATA[
			 		and ed.is_reprint = #{is_reprint}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="printer_code != null and printer_code != ''">
   				<![CDATA[
			 		and ed.printer_code = #{printer_code}
				]]>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_user_name) LIKE UPPER('%'+#{duty_user_name}+'%') 
				]]>
			</if>
			<if test="duty_user_iidd != null and duty_user_iidd != ''">
   				<![CDATA[
			 		and ed.duty_user_iidd = #{duty_user_iidd}
				]]>
			</if>
			<if test="duty_dept_name != null and duty_dept_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_dept_name) LIKE UPPER('%'+#{duty_dept_name}+'%') 
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="dept_name != null and dept_name != ''">
   				<![CDATA[
			 		and ed.dept_name = #{dept_name}
				]]>
			</if>
			<if test="dept_iidd != null and dept_iidd != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_iidd}
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and ed.user_name = #{user_name}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
					 		and ed.retrieve_time >= #{start_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
					 		and ed.destroy_time >= #{start_time}
						]]>
					</when>
					<otherwise>
		   				<![CDATA[
					 		and ed.print_time >= #{start_time}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="end_time != null and end_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
			 				and ed.retrieve_time <= #{end_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
			 				and ed.destroy_time <= #{end_time}
						]]>
					</when>
					<otherwise>
						<![CDATA[
			 				and ed.print_time <= #{end_time}
						]]>
					</otherwise>
   				
				</choose>
			</if>
			<if test="paper_state !=null and paper_state != ''">
   				<![CDATA[
			 		and ed.paper_state = #{paper_state}
				]]>
			</if>
			<if test="paper_barcode != null and paper_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
				]]>
			</if>
			<if test="send_num != null and send_num != ''">
   				<![CDATA[
			 		and UPPER(ed.send_num) LIKE UPPER('%'+#{send_num}+'%')
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
   				<![CDATA[
			 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if>
			<if test="jobtype_code != null and jobtype_code != ''">
   				<![CDATA[
			 		and jp.jobtype_code = #{jobtype_code}
				]]>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
			<if test="current_dept_id != null and current_dept_id != ''">
   				<![CDATA[
			 		and (ed.scope_dept_id = #{current_dept_id} or ed.scope_dept_id in(select br_dept_id from dept_open_scope dos where dos.dept_id=#{current_dept_id}))
				]]>
			</if>
			<if test="scope_dept != null and scope_dept != ''">
   				<![CDATA[
			 		and ed.scope = #{scope_dept}
				]]>
			</if>
			<if test="scope_dept_id != null and scope_dept_id != ''">
   				<![CDATA[
			 		and ed.scope_dept_id = #{scope_dept_id}
				]]>
			</if>
			<if test="duty_dept_id != null and duty_dept_id != ''">
   				<![CDATA[
			 		and ed.duty_dept_id = #{duty_dept_id}
				]]>
			</if>
			<if test="dept_CS != null and dept_CS != ''">
				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{dept_CS}+'%'
							]]>
					</when>

					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{dept_CS}
						]]>
					</otherwise>

				</choose>

			</if>
			<if test="create_type != null and create_type != ''">
   				<![CDATA[
			 		and ed.create_type = #{create_type}
				]]>
			</if>
			<if test="dept_ids != null and dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="retrieve_box_code != null and retrieve_box_code != ''">
   				<![CDATA[
			 		and ed.retrieve_box_code = #{retrieve_box_code}
				]]>
			</if>
			<if test="admin_dept_ids_made != null and admin_dept_ids_made != ''">
				and ed.dept_id in
				<foreach item="item" index="index" collection="admin_dept_ids_made"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="admin_dept_ids != null and admin_dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="admin_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="scope_dept_ids != null and scope_dept_ids != ''">
				and ed.scope_dept_id in
				<foreach item="item" index="index" collection="scope_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="keyword_content != null and keyword_content != ''">
   				<![CDATA[
			 		and UPPER(ep.keyword_content) LIKE UPPER('%'+#{keyword_content}+'%')
				]]>
			</if>
			<if test="expire_status ==0">
   				<![CDATA[
			 		and (ed.expire_time >= #{coming_expire_time} or ed.expire_time is null)
				]]>
			</if>
			<if test="expire_status ==1">
   				<![CDATA[
			 		and ed.expire_time <= #{expire_time} 
				]]>
			</if>
			<if test="expire_status ==2">
   				<![CDATA[
			 		and (ed.expire_time > #{expire_time} and ed.expire_time < #{coming_expire_time})
				]]>
			</if>
			<if test="replacePage !=null and replacePage != ''">
   				<![CDATA[
			 		and ed.paper_state in (0, 7, 8, 9)
				]]>
			</if>
		</trim>
		and (ed.PID_barcode is null or ed.PID_barcode='')
	</select>
	<select id="getAllPaperRecycleLedgerList" resultType="entitypaper"
		parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select distinct ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,jp.output_user_name,jp.output_dept_name,ep.keyword_content,dp.dept_cs
			 from entity_paper ed 
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status,output_user_name,output_dept_name from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select barcode,job_code from event_senddestroy) sd_event on (sd_event.barcode = ed.paper_barcode)
			 left join (select job_code,job_status from job_process) sd_job on(sd_event.job_code = sd_job.job_code)
			 left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		     <if test="event_ids != null and event_ids != ''" >
				and ed.paper_barcode in 
				<foreach item="item" index="index" collection="event_ids" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="barcodes != null and barcodes != ''" >
				and ed.paper_barcode in 
				<foreach item="item" index="index" collection="barcodes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and ed.duty_user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="user_id != null and user_id != ''">
				<![CDATA[
					and ed.user_iidd = #{user_id}
				]]>
			</if>
			<if test="is_print_result">
				<![CDATA[
					and ed.paper_state in (0, 8, 9)
				]]>
			</if>
			<if test="is_graph">
				<![CDATA[
					and ep.print_type=2
				]]>
			</if>
			<if test="is_retrieve">
				<![CDATA[
					and ed.paper_state = 0  and ed.job_code is null
				]]>
			</if>
			<if test="is_transfer">
				<![CDATA[
					and ed.paper_state = 0
				]]>
			</if>
			<if test="is_recycled">
				<![CDATA[
					and ed.paper_state =1
				]]>
			</if>
			<if test="is_sendes">
				<![CDATA[
					and ed.paper_state =1
				]]>
			</if>
			<if test="is_sendes_1">
				<![CDATA[
					and ed.paper_state =11
				]]>
			</if>
			<if test="is_retrieved">
				<![CDATA[
					and ed.paper_state = 11 and jp.job_status = 'true'
				]]>
			</if>
			<if test="is_handle">
				<![CDATA[
					and ed.paper_state = 0
				]]>
			</if>
			<if test="has_job_code">
				<![CDATA[
					and ed.job_code is not null and ed.job_code != ''
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''" >
				and ed.seclv_code in 
				<foreach item="item" index="index" collection="seclv_code" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="is_reprint != null and is_reprint != ''">
   				<![CDATA[
			 		and ed.is_reprint = #{is_reprint}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="printer_code != null and printer_code != ''">
   				<![CDATA[
			 		and ed.printer_code = #{printer_code}
				]]>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_user_name) LIKE UPPER('%'+#{duty_user_name}+'%') 
				]]>
			</if>
			<if test="duty_user_iidd != null and duty_user_iidd != ''">
   				<![CDATA[
			 		and ed.duty_user_iidd = #{duty_user_iidd}
				]]>
			</if>
			<if test="duty_dept_name != null and duty_dept_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_dept_name) LIKE UPPER('%'+#{duty_dept_name}+'%') 
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="dept_name != null and dept_name != ''">
   				<![CDATA[
			 		and ed.dept_name = #{dept_name}
				]]>
			</if>
			<if test="dept_iidd != null and dept_iidd != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_iidd}
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and ed.user_name = #{user_name}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
					 		and ed.retrieve_time >= #{start_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
					 		and ed.destroy_time >= #{start_time}
						]]>
					</when>
					<otherwise>
		   				<![CDATA[
					 		and ed.print_time >= #{start_time}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="end_time != null and end_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
			 				and ed.retrieve_time <= #{end_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
			 				and ed.destroy_time <= #{end_time}
						]]>
					</when>
					<otherwise>
						<![CDATA[
			 				and ed.print_time <= #{end_time}
						]]>
					</otherwise>
   				
				</choose>
			</if>
			<if test="paper_state != null and paper_state != ''">
   				<![CDATA[
			 		and ed.paper_state = #{paper_state}
				]]>
			</if>
			<if test="paper_barcode != null and paper_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
				]]>
			</if>
			<if test="send_num != null and send_num != ''">
   				<![CDATA[
			 		and UPPER(ed.send_num) LIKE UPPER('%'+#{send_num}+'%')
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
   				<![CDATA[
			 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if>
			<if test="jobtype_code != null and jobtype_code != ''">
   				<![CDATA[
			 		and jp.jobtype_code = #{jobtype_code}
				]]>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
			<if test="current_dept_id != null and current_dept_id != ''">
   				<![CDATA[
			 		and (ed.scope_dept_id = #{current_dept_id} or ed.scope_dept_id in(select br_dept_id from dept_open_scope dos where dos.dept_id=#{current_dept_id}))
				]]>
			</if>
			<if test="scope_dept != null and scope_dept != ''">
   				<![CDATA[
			 		and ed.scope = #{scope_dept}
				]]>
			</if>
			<if test="scope_dept_id != null and scope_dept_id != ''">
   				<![CDATA[
			 		and ed.scope_dept_id = #{scope_dept_id}
				]]>
			</if>
			<if test="duty_dept_id != null and duty_dept_id != ''">
   				<![CDATA[
			 		and ed.duty_dept_id = #{duty_dept_id}
				]]>
			</if>
			<if test="dept_CS != null and dept_CS != ''">

				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{dept_CS}+'%'
							]]>
					</when>
					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{dept_CS}
						]]>
					</otherwise>

				</choose>
			</if>
			<if test="create_type != null and create_type != ''">
   				<![CDATA[
			 		and ed.create_type = #{create_type}
				]]>
			</if>
			<if test="dept_ids != null and dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="retrieve_box_code != null and retrieve_box_code != ''">
   				<![CDATA[
			 		and ed.retrieve_box_code = #{retrieve_box_code}
				]]>
			</if>
			<if test="admin_dept_ids_made != null and admin_dept_ids_made != ''">
				and ed.dept_id in
				<foreach item="item" index="index" collection="admin_dept_ids_made"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="admin_dept_ids != null and admin_dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="admin_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="scope_dept_ids != null and scope_dept_ids != ''">
				and ed.scope_dept_id in
				<foreach item="item" index="index" collection="scope_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="keyword_content != null and keyword_content != ''">
   				<![CDATA[
			 		and UPPER(ep.keyword_content) LIKE UPPER('%'+#{keyword_content}+'%')
				]]>
			</if>
			<if test="expire_status ==0">
   				<![CDATA[
			 		and (ed.expire_time >= #{coming_expire_time} or ed.expire_time is null)
				]]>
			</if>
			<if test="expire_status ==1">
   				<![CDATA[
			 		and ed.expire_time <= #{expire_time} 
				]]>
			</if>
			<if test="expire_status ==2">
   				<![CDATA[
			 		and (ed.expire_time > #{expire_time} and ed.expire_time < #{coming_expire_time})
				]]>
			</if>
			<if test="replacePage !=null and replacePage != ''">
   				<![CDATA[
			 		and ed.paper_state in (0, 7, 8, 9)
				]]>
			</if>
		</trim>
		and (ed.PID_barcode is null or ed.PID_barcode = '')
		<choose>
			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
			</when>
			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
			</when>
			<otherwise>
   				<![CDATA[
			 		order by ed.print_time desc
				]]>
			</otherwise>
		</choose>
	</select>
		<select id="getDestroyPaperSize" resultType="int" parameterType="map">
		<![CDATA[
			select count(1)
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('DESTROY_PAPER','DESTROY')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             ) 
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
	</select>
	<select id="getFilePaperSize" resultType="int"
		parameterType="map">
		<![CDATA[
			select count(1)
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('FILE_PAPER','FILE','PRINT_FILE','COPY_FILE','OUTCOPY_FILE')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )  
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
	</select>
	<select id="getDelayPaperSize" resultType="int" parameterType="map">
		<![CDATA[
			select count(1)
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('DELAY_PAPER','DELAY')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
	</select>
	<select id="getCarryOutJobSize" parameterType="map" resultType="int" >
		<![CDATA[
			select count(1)
			from job_process jp
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (jp.seclv_code=ss.seclv_code)
				left join (select user_iidd,user_name from sec_user) su on (jp.user_iidd = su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(jp.dept_id = sd.dept_id)
				left join (select job_code,entity_type from event_carryout) event on(jp.job_code = event.job_code)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="entity_type != null and entity_type != ''">
   				<![CDATA[
			 		and event.entity_type = #{entity_type}
				]]>
			</if>

			<if test="user_iidd != null and user_iidd != ''">
   				<![CDATA[
			 		and jp.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and jp.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="jobType_code != null and jobType_code != ''">
   				<![CDATA[
			 		and jp.jobtype_code = #{jobType_code}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and jp.start_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and jp.start_time <= #{endTime}
				]]>
			</if>
		</trim>
	</select>
	<select id="getDestroyCDSize" resultType="int" parameterType="map" >
		<![CDATA[
			select count(1)
			 from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('DESTROY','DESTROY_CD')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.burn_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.burn_time <= #{end_time}
			]]>
		</if>
		<if test="cd_barcode != null and cd_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
			]]>
		</if>
		<if test="file_list != null and file_list != ''">
  			<![CDATA[
		 		and UPPER(ed.file_list) LIKE UPPER('%'+#{file_list}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="cd_state != null and cd_state != ''">
  			<![CDATA[
		 		and ed.cd_state = #{cd_state}
			]]>
		</if>
	</select>
	<select id="getSendCDSize" resultType="int" parameterType="map">
		<![CDATA[
			select count(1)
			 from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('SEND','SEND_CD','BURN_SEND')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
				and	ed.user_iidd = #{user_iidd}
				]]>
		</if>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.burn_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.burn_time <= #{end_time}
			]]>
		</if>
		<if test="cd_barcode != null and cd_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
			]]>
		</if>
		<if test="file_list != null and file_list != ''">
  			<![CDATA[
		 		and UPPER(ed.file_list) LIKE UPPER('%'+#{file_list}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="cd_state != null and cd_state != ''">
  			<![CDATA[
		 		and ed.cd_state = #{cd_state}
			]]>
		</if>
	</select>
	<select id="getFileCDSize" resultType="int" parameterType="map">
		<![CDATA[
			select count(1)
			 from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('FILE','FILE_CD','BURN_FILE')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.burn_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.burn_time <= #{end_time}
			]]>
		</if>
		<if test="cd_barcode != null and cd_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
			]]>
		</if>
		<if test="file_list != null and file_list != ''">
  			<![CDATA[
		 		and UPPER(ed.file_list) LIKE UPPER('%'+#{file_list}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="cd_state != null and cd_state != ''">
  			<![CDATA[
		 		and ed.cd_state = #{cd_state}
			]]>
		</if>
	</select>
	<select id="getDelayCDSize" resultType="int" parameterType="map">
		<![CDATA[
			select count(1)
			 from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)	
		     where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('DELAY','DELAY_CD')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.burn_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.burn_time <= #{end_time}
			]]>
		</if>
		<if test="cd_barcode != null and cd_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
			]]>
		</if>
		<if test="file_list != null and file_list != ''">
  			<![CDATA[
		 		and UPPER(ed.file_list) LIKE UPPER('%'+#{file_list}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="cd_state != null and cd_state != ''">
  			<![CDATA[
		 		and ed.cd_state = #{cd_state}
			]]>
		</if>
	</select>	
	<update id="updatePaperIsBook" parameterType="map">
		<![CDATA[
		update entity_paper 
			set secret_book=1
			where paper_id=#{paper_id}
		]]>
	</update>
	<update id="ExpectsignPaperSuccess" parameterType="map">
		<![CDATA[
		update entity_paper 
			set print_result=1, fail_remark=#{fail_remark}, real_page_count=#{real_page_count}
			where paper_id=#{paper_id}
		]]>
	</update>
	<update id="ExpectsignPaperfail" parameterType="map">
		<![CDATA[
		update entity_paper 
			set print_result=0
			where paper_id=#{paper_id}
		]]>
	</update>
	<select id="getReplacePaperByPaperBarcode" parameterType="string" resultType="entitypaper">
		<![CDATA[
			select *
			from entity_paper
			where PID_barcode = #{paper_barcode}
		]]>
	</select>
	<update id="updateRetrievedPageNew" parameterType="map">
		<![CDATA[
			update entity_paper set retrieve_pagenum=#{retrieve_pagenum} where paper_id=#{paper_id}
		]]>
	</update>
	<update id="updateRetrievedPageNewStatus" parameterType="map">
		<![CDATA[
			update entity_paper set retrieve_replace=#{retrieve_replace} where paper_id=#{paper_id}
		]]>
	</update>
	<update id="updateDestroyedPageNew" parameterType="map">
		<![CDATA[
			update entity_paper set destroy_pagenum=#{destroy_pagenum} where paper_id=#{paper_id}
		]]>
	</update>
	<update id="updateDestroyedPageNewStatus" parameterType="map">
		<![CDATA[
			update entity_paper set retrieve_replace=#{retrieve_replace} where paper_id=#{paper_id}
		]]>
	</update>
	<select id="getEventLogAll" resultType="eventlog" parameterType="map">
		
		<![CDATA[
			select uel.*,su.user_name,sd.dept_name,sc.console_name,ep.file_title from UNLOCK_EVENT_LOG uel 
			left join sec_user su on su.USER_IIDD=uel.USER_IIDD
			left join sec_dept sd on sd.dept_id=su.dept_id
			left join SYS_CONSOLE sc on sc.CONSOLE_CODE=uel.CONSOLE_CODE
			left join entity_paper ep on ep.event_code=uel.event_code
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		
			<if test="user_name != null and user_name != ''" >
   				<![CDATA[
			 		and UPPER(su.user_name) LIKE UPPER('%'+#{user_name}+'%')
				]]>
   			</if>
   			<if test="dept_name != null and dept_name != ''" >
   				<![CDATA[
			 		and UPPER(sd.dept_name) LIKE UPPER('%'+#{dept_name}+'%')
				]]>
   			</if>
   			<if test="console_name != null and console_name != ''" >
   				<![CDATA[
			 		and UPPER(sc.console_name) LIKE UPPER('%'+#{console_name}+'%')
				]]>
   			</if>
			
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and uel.unlock_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and uel.unlock_time <= #{endTime}
				]]>
			</if>
		</trim>
		order by unlock_time desc
	</select>
	<select id="getModifyPaperSize" resultType="int" parameterType="map">
		<![CDATA[
			select count(1)
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)					
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('PAPER_DEL','PAPER_MODIFY')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
	</select>
	<select id="getModifyPaperList" resultType="entitypaper" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,
			du.user_name destroy_user_name,sr.box_name as retrieve_box_name,ep.keyword_content,dp.dept_cs
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)		
		 	 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('PAPER_DEL','PAPER_MODIFY')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
	</select>
	<update id="updateEntityPaperMap" parameterType="map">
		<![CDATA[
			update entity_paper 	
		]]>
		<trim prefix="set" prefixOverrides=",">
			<if test="paper_state != null" >
	 			<![CDATA[
		 			 ,paper_state = #{paper_state}
				]]>
	 		</if>
	 		<if test="expire_time != null and expire_time != ''" >
	 			<![CDATA[
		 			,expire_time = #{expire_time}
				]]>
	 		</if>
	 		<if test="retrieve_time != null and retrieve_time != ''" >
	 			<![CDATA[
		 			,retrieve_time = #{retrieve_time}
				]]>
	 		</if>
	 		<if test="retrieve_user_iidd != null and retrieve_user_iidd != ''" >
	 			<![CDATA[
		 			,retrieve_user_iidd = #{retrieve_user_iidd}
				]]>
	 		</if>
	 		<if test="duty_dept_name != null and duty_dept_name != ''" >
	 			<![CDATA[
		 			 ,duty_dept_name = #{duty_dept_name}
				]]>
	 		</if>
	 		<if test="duty_dept_id != null and duty_dept_id != ''" >
	 			<![CDATA[
		 			,duty_dept_id = #{duty_dept_id}
				]]>
	 		</if>
	 		<if test="duty_user_name != null and duty_user_name != ''" >
	 			<![CDATA[
		 			,duty_user_name = #{duty_user_name}
				]]>
	 		</if>
	 		<if test="duty_user_iidd != null and duty_user_iidd != ''" >
	 			<![CDATA[
		 			,duty_user_iidd = #{duty_user_iidd}
				]]>
	 		</if>
	 		<if test="print_result != null and print_result != ''" >
	 			<![CDATA[
		 			,print_result = #{print_result}
				]]>
	 		</if>
	 		<if test="job_code != null and job_code != ''" >
	 			<![CDATA[
		 			,job_code = #{job_code}
				]]>
	 		</if>
	 		<if test="page_count != null" >
	 			<![CDATA[
		 			,page_count = #{page_count}
				]]>
	 		</if>
	 		<if test="output_confidential_num != null" >
	 			<![CDATA[
		 			,output_confidential_num = #{output_confidential_num}
				]]>
	 		</if>
 		</trim>
 			where paper_id=#{paper_id}			
	</update>
	<update id="updateJobProcessInfo" parameterType="map">
		<![CDATA[
			update job_process set 
			output_dept_name=#{output_dept_name},
			output_user_name=#{output_user_name}
			 where job_code=#{job_code}
		]]>
	</update>
	<update id="reprintsendconfirm" parameterType="map">
		<![CDATA[
			update job_process set is_receipt = 'N' 
			where job_code = (select job_code from entity_paper where paper_barcode = #{paper_barcode})
		]]>
	</update>
	<update id="reprintsendconfirmcd" parameterType="map">
		<![CDATA[
			update job_process set is_receipt = 'N' 
			where job_code = (select job_code from entity_cd where cd_barcode = #{cd_barcode})
		]]>
	</update>
	<insert id="addEventTemp" parameterType="eventtemp">
		<![CDATA[
			insert into event_temp(
				event_code, 
				user_iidd,  
				dept_id,    
				seclv_code, 
				project_code,
				usage_code,  
				apply_time,
				summ,
				page_num,
				scope_dept_id,
				scope_dept_name,
				entity_type,
				job_code,
				barcode,
				file_name,
				statue
			)values(
				#{event_code}, 
				#{user_iidd},  
				#{dept_id},    
				#{seclv_code}, 
				#{project_code},
				#{usage_code},  
				#{apply_time},
				#{summ},
				#{page_num},
				#{scope_dept_id},
				#{scope_dept_name},
				#{entity_type},
				#{job_code},
				#{barcode},
				#{file_name},
				#{statue}
			)	
		]]>
	</insert>
	<select id="getTempEventList" parameterType="map" resultType="eventtemp">
		<![CDATA[
			select eb.*,jp.job_status,su.user_name,sd.dept_name,ss.seclv_name,syu.usage_name,sp.project_name
			 from event_temp eb 
				left join job_process jp on(eb.job_code=jp.job_code)
				left join (select user_iidd,user_name,dept_id from sec_user) su on(eb.user_iidd=su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(eb.dept_id=sd.dept_id)
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (eb.seclv_code=ss.seclv_code)
				left join sys_usage syu on(eb.usage_code=syu.usage_code)
				left join sys_project sp on (eb.project_code=sp.project_code)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''" >
   				<![CDATA[
			 		and eb.user_iidd = #{user_iidd}
				]]>
   			</if>
   			<if test="seclv_code != null and seclv_code != ''" >
   				<![CDATA[
			 		and eb.seclv_code = #{seclv_code}
				]]>
   			</if>
   			<if test="startTime != null and startTime != ''" >
   				<![CDATA[
			 		and eb.apply_time >= #{startTime}
				]]>
   			</if>
   			<if test="endTime != null and endTime != ''" >
   				<![CDATA[
			 		and eb.apply_time <= #{endTime}
				]]>
   			</if>
   			<if test="job_status != null and job_status != ''" >
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
   			</if>
   		</trim>
   		order by eb.apply_time desc
	</select>
	<select id="getTempEventListByJobCode" parameterType="string" resultType="eventtemp">
		<![CDATA[
			select euc.*,jp.job_status,su.user_name,sd.dept_name,ss.seclv_name,syu.usage_name,sp.project_name
			 from event_temp euc 
				left join job_process jp on(euc.job_code=jp.job_code)
				left join (select user_iidd,user_name,dept_id from sec_user) su on(euc.user_iidd=su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(euc.dept_id=sd.dept_id)
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (euc.seclv_code=ss.seclv_code)
				left join sys_usage syu on(euc.usage_code=syu.usage_code)
				left join sys_project sp on (euc.project_code=sp.project_code)
			where euc.job_code = #{job_code}
		]]>
	</select>
	<select id="getTempEventByEventCode" parameterType="string" resultType="eventtemp">
		<![CDATA[
			select * from event_temp where event_code = #{event_code}
		]]>
	</select>
	<update id="deleteEventTempBycode" parameterType="string">
   		<![CDATA[
			delete from event_temp where event_code= #{event_code}
		]]>
	</update>
	<select id="getHandleTempCountByJobCode" parameterType="string" resultType="int">
		<![CDATA[
			select count(1) from event_temp where job_code=#{job_code}
		]]>
	</select>
	<select id="getTempJobList" parameterType="map" resultType="processjob">
		<![CDATA[
			select distinct jp.*,ss.seclv_name,su.user_name,sd.dept_name
			from job_process jp
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (jp.seclv_code=ss.seclv_code)
				left join (select user_iidd,user_name from sec_user) su on (jp.user_iidd = su.user_iidd)
				left join (select dept_id,dept_name from sec_dept) sd on(jp.dept_id = sd.dept_id)
				left join (select job_code,entity_type from event_temp) event on(jp.job_code = event.job_code)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			jp.job_code = event.job_code
			<if test="entity_type != null and entity_type != ''">
   				<![CDATA[
			 		and event.entity_type = #{entity_type}
				]]>
			</if>
			<if test="user_iidd != null and user_iidd != ''">
   				<![CDATA[
			 		and jp.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and jp.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="jobType_code != null and jobType_code != ''">
   				<![CDATA[
			 		and jp.jobtype_code = #{jobType_code}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
   				<![CDATA[
			 		and jp.job_status = #{job_status}
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and jp.start_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and jp.start_time <= #{endTime}
				]]>
			</if>
		</trim>
		order by start_time desc
	</select>
	<update id="updateEntityCdMap" parameterType="map">
		<![CDATA[
			update entity_cd 	
		]]>
		<trim prefix="set" prefixOverrides=",">
			<if test="cd_state != null" >
	 			<![CDATA[
		 			 ,cd_state = #{cd_state}
				]]>
	 		</if>
	 		<if test="job_code != null and job_code != ''" >
	 			<![CDATA[
		 			,job_code = #{job_code}
				]]>
	 		</if>
	 		<if test="output_confidential_num != null" >
	 			<![CDATA[
		 			,output_confidential_num = #{output_confidential_num}
				]]>
	 		</if>
 		</trim>
 			where cd_id=#{cd_id}			
	</update>
	<update id="updateSupervisePaperStateByBarcode" parameterType="map">
		<![CDATA[
			update entity_paper 
		]]>
		<trim prefix="set" prefixOverrides=",">
			<if test="paper_state != null" >
	 			<![CDATA[
		 			 ,paper_state = #{paper_state}
				]]>
	 		</if>
	 		<if test="supervise_user_iidd != null and supervise_user_iidd != ''" >
	 			<![CDATA[
		 			,supervise_user_iidd = #{supervise_user_iidd}
				]]>
	 		</if>
	 		<if test="destroy_time != null and destroy_time != ''" >
	 			<![CDATA[
		 			,destroy_time = #{destroy_time}
				]]>
	 		</if>
	 		<if test="comment != null and comment != ''" >
	 			<![CDATA[
		 			,fail_remark = isnull(fail_remark+',','')+ #{comment}
				]]>
	 		</if>
 		</trim> 
			where paper_barcode = #{barcode}	
	</update>
	<update id="updateSuperviseCDStateByBarcode" parameterType="map">
		<![CDATA[
			update entity_cd 
		]]>
		<trim prefix="set" prefixOverrides=",">
			<if test="cd_state != null" >
	 			<![CDATA[
		 			 ,cd_state = #{cd_state}
				]]>
	 		</if>
	 		<if test="supervise_user_iidd != null and supervise_user_iidd != ''" >
	 			<![CDATA[
		 			,supervise_user_iidd = #{supervise_user_iidd}
				]]>
	 		</if>
	 		<if test="destroy_time != null and destroy_time != ''" >
	 			<![CDATA[
		 			,destroy_time = #{destroy_time}
				]]>
	 		</if>
	 		<if test="comment != null and comment != ''" >
	 			<![CDATA[
		 			,fail_remark = isnull(fail_remark+',','')+ #{comment}
				]]>
	 		</if>
 		</trim> 
			where cd_barcode = #{barcode}
	</update>
	<select id="getSelfDestroyPaperSize" resultType="int" parameterType="map">
		<![CDATA[
			select count(1)
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)		
		  	 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('DESTROY_PAPER_BYSELF')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
	</select>
	<select id="getSelfDestroyPaperList" resultType="entitypaper" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,ep.keyword_content,dp.dept_cs
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ in ('DESTROY_PAPER_BYSELF')) act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		 <if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope} and (ed.paper_state = 4 or ed.paper_state = 15)
				]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
		<if test="or_book">
				<![CDATA[
					and ed.paper_barcode in(
						select ep.paper_barcode from entity_paper ep 
						join event_import ei on ep.event_code=ei.event_code
						where ei.file_kind='BOOK' and ep.scope='dept')
				]]>
		</if>	
		order by ed.print_time desc
	</select>
	<select id="getSelfDestroyCDSize" resultType="int" parameterType="map">
		<![CDATA[
			select count(1)
			 from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,conf_code from event_burn) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)	
			 where ed.job_code in (select text_ from act_hi_varinst ahc1 where name_='job_code' and proc_inst_id_ in (
					select proc_inst_id_ from act_hi_taskinst where name_='userApply' and assignee_= #{user_iidd}
					) and ((select text_ from act_hi_varinst ahc2 where name_='jobType_code' and ahc2.proc_inst_id_ = ahc1.proc_inst_id_) in ('DESTROY_CD_BYSELF')))  
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.burn_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.burn_time <= #{end_time}
			]]>
		</if>
		<if test="cd_barcode != null and cd_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
			]]>
		</if>
		<if test="file_list != null and file_list != ''">
  			<![CDATA[
		 		and UPPER(ed.file_list) LIKE UPPER('%'+#{file_list}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="cd_state != null and cd_state != ''">
  			<![CDATA[
		 		and ed.cd_state = #{cd_state}
			]]>
		</if>
	</select>
	<select id="getSelfDestroyCDList" resultType="entitycd" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,dp.dept_cs
			 from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,conf_code from event_burn) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)	
			 where ed.job_code in (select text_ from act_hi_varinst ahc1 where name_='job_code' and proc_inst_id_ in (
					select proc_inst_id_ from act_hi_taskinst where name_='userApply' and assignee_= #{user_iidd}
					) and ((select text_ from act_hi_varinst ahc2 where name_='jobType_code' and ahc2.proc_inst_id_ = ahc1.proc_inst_id_) in ('DESTROY_CD_BYSELF')))  
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.burn_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.burn_time <= #{end_time}
			]]>
		</if>
		<if test="cd_barcode != null and cd_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
			]]>
		</if>
		<if test="file_list != null and file_list != ''">
  			<![CDATA[
		 		and UPPER(ed.file_list) LIKE UPPER('%'+#{file_list}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="cd_state != null and cd_state != ''">
  			<![CDATA[
		 		and ed.cd_state = #{cd_state}
			]]>
		</if>
		order by ed.burn_time desc
	</select>
	<select id="getPersonalDeviceLedgerList" resultType="entitydevice"
		parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			 select ed.*,sd.dept_name,ss.seclv_name,suu.user_name,sdu.user_name as duty_user_name,sbu.user_name as borrow_user_name,jp.jobtype_code
			 ,jp.job_status,borrow.dept_name borrow_dept_name,mt.typename med_type_name
			 from entity_device ed
		 	left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			left join sec_dept sd on(ed.dept_id = sd.dept_id)
			left join (select u.user_iidd,s.dept_name from sec_dept s,sec_user u where s.dept_id = u.dept_id) borrow on (borrow_user_iidd = borrow.user_iidd)				
			left join sec_user_seclv ss on(ed.seclv_code = ss.seclv_code)
			left join (select user_iidd,user_name from sec_user) suu on(ed.user_iidd=suu.user_iidd)
			left join (select user_iidd,user_name from sec_user) sdu on(ed.duty_user_iidd=sdu.user_iidd)
			left join (select user_iidd,user_name from sec_user) sbu on(ed.borrow_user_iidd=sbu.user_iidd)
			left join (select id,typename from med_type) mt on (ed.med_type=mt.id)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			 <if test="borrow_user_iidd != null and borrow_user_iidd != ''">
				<![CDATA[
					ed.borrow_user_iidd = #{borrow_user_iidd}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="device_status != null and device_status != ''">
   				<![CDATA[
			 		and ed.device_status = #{device_status}
				]]>
			</if>
			<if test="med_type != null and med_type != ''">
   				<![CDATA[
			 		and ed.med_type = #{med_type}
				]]>
			</if>
			<if test="device_barcode != null and device_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.device_barcode) LIKE UPPER('%'+#{device_barcode}+'%')
				]]>
			</if>
			<if test="device_barcodes != null and device_barcodes != ''" >
				and ed.device_barcode in 
				<foreach item="item" index="index" collection="device_barcodes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="device_series != null and device_series != ''">
   				<![CDATA[
			 		and UPPER(ed.device_series) LIKE UPPER('%'+#{device_series}+'%')
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and ed.enter_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and ed.enter_time <= #{endTime}
				]]>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
			<if test="not is_all">
			<![CDATA[
				and ed.is_sealed='N'
			]]>
			</if>
			<choose>
				<when test="has_job_code">
	   				<![CDATA[
				 		and ed.job_code is not null and ed.job_code != ''
					]]>
					<if test="job_status != null and job_status != ''">
		   				<![CDATA[
					 		and jp.job_status = #{job_status}
						]]>
					</if>
				</when>
				<otherwise>
	   				<![CDATA[
				 		and (ed.job_code is null or (ed.job_code is not null and jp.job_status ='false'))
					]]>
				</otherwise>
			</choose>
			</trim>
		<![CDATA[
   				order by ed.is_sealed, ed.enter_time desc
   			]]>
	</select>
	<select id="getPersonalDeviceLedgerSize" resultType="int" parameterType="map">
			<![CDATA[
			select count(distinct ed.device_barcode)
			from entity_device ed
		 	left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			left join sec_dept sd on(ed.dept_id = sd.dept_id)
			left join (select u.user_iidd,s.dept_name from sec_dept s,sec_user u where s.dept_id = u.dept_id) borrow on (borrow_user_iidd = borrow.user_iidd)				
			left join sec_user_seclv ss on(ed.seclv_code = ss.seclv_code)
			left join (select user_iidd,user_name from sec_user) suu on(ed.user_iidd=suu.user_iidd)
			left join (select user_iidd,user_name from sec_user) sdu on(ed.duty_user_iidd=sdu.user_iidd)
			left join (select user_iidd,user_name from sec_user) sbu on(ed.borrow_user_iidd=sbu.user_iidd)
			left join (select id,typename from med_type) mt on (ed.med_type=mt.id)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			 <if test="borrow_user_iidd != null and borrow_user_iidd != ''">
				<![CDATA[
					ed.borrow_user_iidd = #{borrow_user_iidd}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="device_status != null and device_status != ''">
   				<![CDATA[
			 		and ed.device_status = #{device_status}
				]]>
			</if>
			<if test="med_type != null and med_type != ''">
   				<![CDATA[
			 		and ed.med_type = #{med_type}
				]]>
			</if>
			<if test="device_barcode != null and device_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.device_barcode) LIKE UPPER('%'+#{device_barcode}+'%')
				]]>
			</if>
			<if test="device_barcodes != null and device_barcodes != ''" >
				and ed.device_barcode in 
				<foreach item="item" index="index" collection="device_barcodes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="device_series != null and device_series != ''">
   				<![CDATA[
			 		and UPPER(ed.device_series) LIKE UPPER('%'+#{device_series}+'%')
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and ed.enter_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and ed.enter_time <= #{endTime}
				]]>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
			<if test="not is_all">
			<![CDATA[
				and ed.is_sealed='N'
			]]>
			</if>
			<choose>
				<when test="has_job_code">
	   				<![CDATA[
				 		and ed.job_code is not null and ed.job_code != ''
					]]>
					<if test="job_status != null and job_status != ''">
		   				<![CDATA[
					 		and jp.job_status = #{job_status}
						]]>
					</if>
				</when>
				<otherwise>
	   				<![CDATA[
				 		and (ed.job_code is null or (ed.job_code is not null and jp.job_status ='false'))
					]]>
				</otherwise>
			</choose>
			</trim>
		<![CDATA[
   				order by ed.is_sealed, ed.enter_time desc
   			]]>
	</select>
	<select id="getDeviceListByBarcodes" parameterType="map" resultType="entitydevice">
		<![CDATA[
			select pb.*, ss.seclv_name from entity_device pb
				left join (select seclv_code,seclv_name from sec_user_seclv) ss on (pb.seclv_code=ss.seclv_code)
			where pb.device_barcode in 
		]]>
		<foreach item="item" index="index" collection="barcodes" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	<select id="getSelfDestroyDeviceSize" resultType="int" parameterType="map">
		<![CDATA[
            select count(distinct ed.device_barcode) from entity_device ed	
			left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			left join (select event_code ,medium_serial from event_import) eb on (eb.medium_serial = ed.device_barcode)
			left join (select job_code,job_status from job_process) sd_job on(ed.job_code = sd_job.job_code)
		left join sec_dept dp on(ed.dept_id = dp.dept_id)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		<if test="supervise_user_iidd != null and supervise_user_iidd != ''">
				<![CDATA[
					ed.supervise_user_iidd = #{supervise_user_iidd}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="device_status != null and device_status != ''">
   				<![CDATA[
			 		and ed.device_status = #{device_status}
				]]>
			</if>
			<if test="med_type != null and med_type != ''">
   				<![CDATA[
			 		and ed.med_type = #{med_type}
				]]>
			</if>
			<if test="device_barcode != null and device_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.device_barcode) LIKE UPPER('%'+#{device_barcode}+'%')
				]]>
			</if>
			<if test="device_series != null and device_series != ''">
   				<![CDATA[
			 		and UPPER(ed.device_series) LIKE UPPER('%'+#{device_series}+'%')
				]]>
			</if>
			<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and ed.enter_time >= #{startTime}
				]]>
			</if>
			<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and ed.enter_time <= #{endTime}
				]]>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
			<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and sd_job.job_status = #{job_status}
			]]>
			<if test="has_job_code">
				<![CDATA[
					and ed.job_code is not null and ed.job_code != ''
				]]>
			</if>
		</if>
		</trim>
	</select>
	<select id="getSelfDestroyDeviceList" resultType="entitydevice" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			 select ed.*,sus.seclv_name,jp.jobtype_code,jp.job_status,du.user_name destroy_user_name,dp.dept_cs
			 from entity_device ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select job_code,jobtype_code,job_status,output_user_name,output_dept_name from job_process) jp on(ed.job_code = jp.job_code)
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.supervise_user_iidd)	
			 left join (select event_code ,medium_serial from event_import) eb on (eb.medium_serial = ed.device_barcode)
			 left join (select job_code,job_status from job_process) sd_job on(ed.job_code = sd_job.job_code)
			 left join sec_dept dp on(ed.dept_id = dp.dept_id)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		<if test="supervise_user_iidd != null and supervise_user_iidd != ''">
				<![CDATA[
					ed.supervise_user_iidd = #{supervise_user_iidd}
				]]>
		</if>
		<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
		</if>
		<if test="device_status != null and device_status != ''">
   				<![CDATA[
			 		and ed.device_status = #{device_status}
				]]>
		</if>
		<if test="med_type != null and med_type != ''">
   				<![CDATA[
			 		and ed.med_type = #{med_type}
				]]>
		</if>
		<if test="device_barcode != null and device_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.device_barcode) LIKE UPPER('%'+#{device_barcode}+'%')
				]]>
		</if>
		<if test="device_series != null and device_series != ''">
   				<![CDATA[
			 		and UPPER(ed.device_series) LIKE UPPER('%'+#{device_series}+'%')
				]]>
		</if>
		<if test="startTime != null and startTime != ''">
   				<![CDATA[
			 		and ed.enter_time >= #{startTime}
				]]>
		</if>
		<if test="endTime != null and endTime != ''">
   				<![CDATA[
			 		and ed.enter_time <= #{endTime}
				]]>
		</if>
		<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and sd_job.job_status = #{job_status}
			]]>
		</if>
		<if test="has_job_code">
				<![CDATA[
					and ed.job_code is not null and ed.job_code != ''
				]]>
		</if>
		</trim>
	</select>
	<update id="updateSuperviseDeviceStateByBarcode" parameterType="map">
		<![CDATA[
			update entity_device 
		]]>
		<trim prefix="set" prefixOverrides=",">
			<if test="device_status != null" >
	 			<![CDATA[
		 			 ,device_status = #{device_status}
				]]>
	 		</if>
	 		<if test="supervise_user_iidd != null and supervise_user_iidd != ''" >
	 			<![CDATA[
		 			,supervise_user_iidd = #{supervise_user_iidd}
				]]>
	 		</if>
	 		<if test="destroy_time != null and destroy_time != ''" >
	 			<![CDATA[
		 			,destroy_time = #{destroy_time}
				]]>
	 		</if>
	 		<if test="comment != null and comment != ''" >
	 			<![CDATA[
		 			,med_content = isnull(med_content+',','')+ #{comment}
				]]>
	 		</if>
 		</trim> 
			where device_barcode = #{barcode}
	</update>
	<update id="resetDeviceState" parameterType="string">
		<![CDATA[
			update entity_device set device_status = 9, job_code = null  where device_barcode=#{device_barcode}
		]]>
	</update>
	<select id="getSecAllPaperLedgerSize" resultType="int"
		parameterType="map">
		<![CDATA[
			select count(distinct ed.paper_barcode) from entity_paper ed
			left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and ed.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="printResult">
				<![CDATA[
					and (ed.print_result = '0' or ed.print_result = '1')
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_user_name) LIKE UPPER('%'+#{duty_user_name}+'%') 
				]]>
			</if>
			<if test="duty_user_iidd != null and duty_user_iidd != ''">
   				<![CDATA[
			 		and ed.duty_user_iidd = #{duty_user_iidd}
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="dept_iidd != null and dept_iidd != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_iidd}
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and ed.user_name = #{user_name}
				]]>
			</if>
			<if test="dept_name != null and dept_name != ''">
   				<![CDATA[
			 		and ed.dept_name = #{dept_name}
				]]>
			</if>
			<if test="scope_dept != null and scope_dept != ''">
   				<![CDATA[
			 		and ed.scope = #{scope_dept}
				]]>
			</if>
			<if test="scope_dept_id != null and scope_dept_id != ''">
   				<![CDATA[
			 		and ed.scope_dept_id = #{scope_dept_id}
				]]>
			</if>
			<if test="not_book">
				<![CDATA[
					and ed.paper_barcode not in(
						select ep.paper_barcode from entity_paper ep 
						join event_import ei on ep.event_code=ei.event_code
						where ei.file_kind='BOOK' and ep.scope='dept')
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
   				<![CDATA[
			 		and ed.print_time >= #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
   				<![CDATA[
			 		and ed.print_time <= #{end_time}
				]]>
			</if>
			<if test="paper_state != null and paper_state != ''">
   				<![CDATA[
			 		and ed.paper_state = #{paper_state}
				]]>
			</if>
			<if test="paper_barcode != null and paper_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
   				<![CDATA[
			 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if>
			<if test="duty_dept_id != null and duty_dept_id != ''">
				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{duty_dept_id}+'%'
							]]>
					</when>
					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{duty_dept_id}
						]]>
					</otherwise>

				</choose>
			</if>
			<if test="create_type != null and create_type != ''">
   				<![CDATA[
			 		and ed.create_type = #{create_type}
				]]>
			</if>
			<if test="dept_ids != null and dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="scope_dept_ids != null and scope_dept_ids != ''">
				and ed.scope_dept_id in
				<foreach item="item" index="index" collection="scope_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="expire_status ==0">
   				<![CDATA[
			 		and (ed.expire_time >= #{coming_expire_time} or ed.expire_time is null)
				]]>
			</if>
			<if test="expire_status ==1">
   				<![CDATA[
			 		and ed.expire_time <= #{expire_time} 
				]]>
			</if>
			<if test="expire_status ==2">
   				<![CDATA[
			 		and (ed.expire_time > #{expire_time} and ed.expire_time < #{coming_expire_time})
				]]>
			</if>
			<if test="entity_status ==0">
   				<![CDATA[
			 		and ed.event_code like 'single_print%'
				]]>
			</if>
			<if test="entity_status ==1">
   				<![CDATA[
			 		and ed.event_code not like 'single_print%'
				]]>
			</if>
			<if test="seclv_codes != null and seclv_codes != ''">
				and ed.seclv_code in 
				<foreach item="item" index="index" collection="seclv_codes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="dept_CS != null and dept_CS != ''">
				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{dept_CS}+'%'
							]]>
					</when>
					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{dept_CS}
						]]>
					</otherwise>
				</choose>
			</if>
		</trim>
		and (ed.PID_barcode is null or ed.PID_barcode='') and merge_state != 1
	</select>
	<select id="getSecAllPaperLedgerList" resultType="entitypaper"
		parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select distinct ed.*,sus.seclv_name,dp.dept_cs
			 from entity_paper ed 
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and ed.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="printResult">
				<![CDATA[
					and (ed.print_result = '0' or ed.print_result = '1')
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_user_name) LIKE UPPER('%'+#{duty_user_name}+'%') 
				]]>
			</if>
			<if test="duty_user_iidd != null and duty_user_iidd != ''">
   				<![CDATA[
			 		and ed.duty_user_iidd = #{duty_user_iidd}
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="dept_iidd != null and dept_iidd != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_iidd}
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and ed.user_name = #{user_name}
				]]>
			</if>
			<if test="dept_name != null and dept_name != ''">
   				<![CDATA[
			 		and ed.dept_name = #{dept_name}
				]]>
			</if>
			<if test="scope_dept != null and scope_dept != ''">
   				<![CDATA[
			 		and ed.scope = #{scope_dept}
				]]>
			</if>
			<if test="scope_dept_id != null and scope_dept_id != ''">
   				<![CDATA[
			 		and ed.scope_dept_id = #{scope_dept_id}
				]]>
			</if>
			<if test="not_book">
				<![CDATA[
					and ed.paper_barcode not in(
						select ep.paper_barcode from entity_paper ep 
						join event_import ei on ep.event_code=ei.event_code
						where ei.file_kind='BOOK' and ep.scope='dept')
				]]>
			</if>
			<if test="seclv_codes != null and seclv_codes != ''">
				and ed.seclv_code in 
				<foreach item="item" index="index" collection="seclv_codes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="start_time != null and start_time != ''">
   				<![CDATA[
			 		and ed.print_time >= #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
   				<![CDATA[
			 		and ed.print_time <= #{end_time}
				]]>
			</if>
			<if test="paper_state != null and paper_state != ''">
   				<![CDATA[
			 		and ed.paper_state = #{paper_state}
				]]>
			</if>
			<if test="paper_barcode != null and paper_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
   				<![CDATA[
			 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if>
			<if test="duty_dept_id != null and duty_dept_id != ''">

				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{duty_dept_id}+'%'
							]]>
					</when>
					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{duty_dept_id}
						]]>
					</otherwise>

				</choose>
			</if>
			<if test="create_type != null and create_type != ''">
   				<![CDATA[
			 		and ed.create_type = #{create_type}
				]]>
			</if>
			<if test="dept_ids != null and dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="scope_dept_ids != null and scope_dept_ids != ''">
				and ed.scope_dept_id in
				<foreach item="item" index="index" collection="scope_dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="expire_status ==0">
   				<![CDATA[
			 		and (ed.expire_time >= #{coming_expire_time} or ed.expire_time is null)
				]]>
			</if>
			<if test="expire_status ==1">
   				<![CDATA[
			 		and ed.expire_time <= #{expire_time} 
				]]>
			</if>
			<if test="expire_status ==2">
   				<![CDATA[
			 		and (ed.expire_time > #{expire_time} and ed.expire_time < #{coming_expire_time})
				]]>
			</if>
			<if test="entity_status ==0">
   				<![CDATA[
			 		and ed.event_code like 'single_print%'
				]]>
			</if>
			<if test="entity_status ==1">
   				<![CDATA[
			 		and ed.event_code not like 'single_print%'
				]]>
			</if>
			<if test="dept_CS != null and dept_CS != ''">
				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{dept_CS}+'%'
							]]>
					</when>
					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{dept_CS}
						]]>
					</otherwise>
				</choose>
			</if>
		</trim>
		and (ed.PID_barcode is null or ed.PID_barcode = '') and merge_state != 1 order by ed.paper_id desc
	</select>
	<insert id="addEntityPaper" parameterType="entitypaper">
		<![CDATA[
			insert into entity_paper(paper_barcode,user_name,user_iidd,dept_name,dept_id,duty_user_iidd,duty_user_name,duty_dept_id,duty_dept_name,print_time,printer_name,seclv_code,page_count,page_size,color,print_double,print_result,file_title,event_code,expire_time) 
			    values(#{paper_barcode},#{user_name},#{user_iidd},#{dept_name},#{dept_id},#{duty_user_iidd},#{duty_user_name},#{duty_dept_id},#{duty_dept_name},#{print_time},#{printer_name},#{seclv_code},#{page_count},#{page_size},#{color},#{print_double},#{print_result},#{file_title},#{event_code},#{expire_time})
		]]>
	</insert>
		<select id="getProxyPaperLedgerSize" resultType="int"
		parameterType="map">
		<![CDATA[
			select count(distinct ed.paper_barcode) from entity_paper ed
			left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			left join (select barcode,job_code from event_senddestroy) sd_event on (sd_event.barcode = ed.paper_barcode)
			left join (select job_code,job_status from job_process) sd_job on(sd_event.job_code = sd_job.job_code)
			left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)
		
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="paper_barcode != null and paper_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
   				<![CDATA[
			 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
   				<![CDATA[
			 		and ed.print_time >= #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
   				<![CDATA[
			 		and ed.print_time <= #{end_time}
				]]>
			</if>
			<if test="user_id != null and user_id != ''">
				<![CDATA[
					and ed.EVENT_CODE in (select EVENT_CODE from event_print where PROXYPRINT_USER_IIDD = #{user_id})
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
		</trim>
		and (ed.PID_barcode is null or ed.PID_barcode='')
	</select>
	<select id="getProxyPaperLedgerList" resultType="entitypaper"
		parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select distinct ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,jp.output_user_name,jp.output_dept_name,ep.keyword_content,dp.dept_cs,sj_job.start_time
			 from entity_paper ed 
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status,output_user_name,output_dept_name from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select barcode,job_code from event_senddestroy) sd_event on (sd_event.barcode = ed.paper_barcode)
			 left join (select job_code,job_status from job_process) sd_job on(sd_event.job_code = sd_job.job_code)
			 left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)
			 left join (select job_code,start_time from job_process) sj_job on(ed.job_code = sj_job.job_code)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="paper_barcode != null and paper_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
   				<![CDATA[
			 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
   				<![CDATA[
			 		and ed.print_time >= #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
   				<![CDATA[
			 		and ed.print_time <= #{end_time}
				]]>
			</if>
			<if test="user_id != null and user_id != ''">
				<![CDATA[
					and ed.EVENT_CODE in (select EVENT_CODE from event_print where PROXYPRINT_USER_IIDD = #{user_id})
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
		</trim>
		and (ed.PID_barcode is null or ed.PID_barcode = '')
	</select>
	<select id="getProxyCDLedgerSize" resultType="int" parameterType="map">
		<![CDATA[
			select count(distinct ed.cd_barcode) from entity_cd ed	
			left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			left join (select event_code,conf_code from event_burn) eb on (eb.event_code = ed.event_code)
			left join (select barcode,job_code from event_senddestroy) sd_event on (sd_event.barcode = ed.cd_barcode)
			left join (select job_code,job_status from job_process) sd_job on(sd_event.job_code = sd_job.job_code)
		left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_id != null and user_id != ''">
				<![CDATA[
					and ed.EVENT_CODE in (select EVENT_CODE from event_burn where PROXYBURN_USER_IIDD = #{user_id})
				]]>
			</if>
			<if test="cd_barcode != null and cd_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
					 		and ed.retrieve_time >= #{start_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
					 		and ed.destroy_time >= #{start_time}
						]]>
					</when>
					<otherwise>
		   				<![CDATA[
					 		and ed.burn_time >= #{start_time}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="end_time != null and end_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
			 				and ed.retrieve_time <= #{end_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
			 				and ed.destroy_time <= #{end_time}
						]]>
					</when>
					<otherwise>
						<![CDATA[
			 				and ed.burn_time <= #{end_time}
						]]>
					</otherwise>
   				
				</choose>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
		</trim>
	</select>
	<select id="getProxyCDLedgerList" resultType="entitycd"
		parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select distinct eb.conf_code, ed.*,sus.seclv_name,sp.project_name,jp.jobtype_code,jp.job_status,jp.output_user_name,jp.output_dept_name,ru.user_name retrieve_user_name,du.user_name destroy_user_name,sr.box_name as retrieve_box_name,dp.dept_cs,sj_job.start_time
			 from entity_cd ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status,output_user_name,output_dept_name from job_process) jp on(ed.job_code = jp.job_code)
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)	
			 left join (select event_code,conf_code from event_burn) eb on (eb.event_code = ed.event_code)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select barcode,job_code from event_senddestroy) sd_event on (sd_event.barcode = ed.cd_barcode)
			 left join (select job_code,job_status from job_process) sd_job on(sd_event.job_code = sd_job.job_code)
			 left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)
			 left join (select job_code,start_time from job_process) sj_job on(ed.job_code = sj_job.job_code)
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_id != null and user_id != ''">
				<![CDATA[
					and ed.EVENT_CODE in (select EVENT_CODE from event_burn where PROXYBURN_USER_IIDD = #{user_id})
				]]>
			</if>
			<if test="cd_barcode != null and cd_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != ''">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
					 		and ed.retrieve_time >= #{start_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
					 		and ed.destroy_time >= #{start_time}
						]]>
					</when>
					<otherwise>
		   				<![CDATA[
					 		and ed.burn_time >= #{start_time}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="end_time != null and end_time != ''">
				<choose>
					<when test="time_type=='retrieve'">
						<![CDATA[
			 				and ed.retrieve_time <= #{end_time}
						]]>
					</when>
					<when test="time_type=='destroy'">
						<![CDATA[
			 				and ed.destroy_time <= #{end_time}
						]]>
					</when>
					<otherwise>
						<![CDATA[
			 				and ed.burn_time <= #{end_time}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="scope != null and scope != ''">
   				<![CDATA[
			 		and ed.scope = #{scope}
				]]>
			</if>
		</trim>
	</select>
	<select id="getSecAllCDLedgerSize" resultType="int"
		parameterType="map">
		<![CDATA[
			select count(distinct ed.cd_barcode) from entity_cd ed
			left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and ed.duty_user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="burnResult">
				<![CDATA[
					and (ed.burn_result = '0' or ed.burn_result = '1')
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="seclv_codes != null and seclv_codes != ''">
				and ed.seclv_code in 
				<foreach item="item" index="index" collection="seclv_codes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_user_name) LIKE UPPER('%'+#{duty_user_name}+'%') 
				]]>
			</if>
			<if test="duty_user_iidd != null and duty_user_iidd != ''">
   				<![CDATA[
			 		and ed.duty_user_iidd = #{duty_user_iidd}
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="dept_iidd != null and dept_iidd != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_iidd}
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and ed.user_name = #{user_name}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
   				<![CDATA[
			 		and ed.burn_time >= #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
   				<![CDATA[
			 		and ed.burn_time <= #{end_time}
				]]>
			</if>
			<if test="cd_state != null and cd_state != ''">
   				<![CDATA[
			 		and ed.cd_state = #{cd_state}
				]]>
			</if>
			<if test="cd_barcode != null and cd_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
				]]>
			</if>
			<!-- <if test="file_title != null and file_title != ''">
   				<![CDATA[
			 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if> -->
			<if test="duty_dept_id != null and duty_dept_id != ''">

				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{duty_dept_id}+'%'
							]]>
					</when>
					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{duty_dept_id}
						]]>
					</otherwise>

				</choose>
			</if>
			<if test="create_type != null and create_type != ''">
   				<![CDATA[
			 		and ed.create_type = #{create_type}
				]]>
			</if>
			<if test="dept_CS != null and dept_CS != ''">
				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{dept_CS}+'%'
							]]>
					</when>
					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{dept_CS}
						]]>
					</otherwise>
				</choose>
			</if>
			<if test="dept_ids != null and dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="expire_status ==0">
   				<![CDATA[
			 		and (ed.expire_time >= #{coming_expire_time} or ed.expire_time is null)
				]]>
			</if>
			<if test="expire_status ==1">
   				<![CDATA[
			 		and ed.expire_time <= #{expire_time} 
				]]>
			</if>
			<if test="expire_status ==2">
   				<![CDATA[
			 		and (ed.expire_time > #{expire_time} and ed.expire_time < #{coming_expire_time})
				]]>
			</if>
			<!-- <if test="entity_status ==0">
   				<![CDATA[
			 		and ed.event_code like 'single_print%'
				]]>
			</if>
			<if test="entity_status ==1">
   				<![CDATA[
			 		and ed.event_code not like 'single_print%'
				]]>
			</if> -->
		</trim>
	</select>
	<select id="getSecAllCDLedgerList" resultType="entitycd"
		parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select distinct ed.*,sus.seclv_name,dp.dept_cs
			 from entity_cd ed 
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					ed.duty_user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="burnResult">
				<![CDATA[
					and (ed.burn_result = '0' or ed.burn_result = '1')
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="seclv_codes != null and seclv_codes != ''">
				and ed.seclv_code in 
				<foreach item="item" index="index" collection="seclv_codes" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="duty_user_name != null and duty_user_name != ''">
   				<![CDATA[
			 		and UPPER(ed.duty_user_name) LIKE UPPER('%'+#{duty_user_name}+'%') 
				]]>
			</if>
			<if test="duty_user_iidd != null and duty_user_iidd != ''">
   				<![CDATA[
			 		and ed.duty_user_iidd = #{duty_user_iidd}
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="dept_iidd != null and dept_iidd != ''">
   				<![CDATA[
			 		and ed.dept_id = #{dept_iidd}
				]]>
			</if>
			<if test="user_name != null and user_name != ''">
   				<![CDATA[
			 		and ed.user_name = #{user_name}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
   				<![CDATA[
			 		and ed.burn_time >= #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
   				<![CDATA[
			 		and ed.burn_time <= #{end_time}
				]]>
			</if>
			<if test="cd_state != null and cd_state != ''">
   				<![CDATA[
			 		and ed.cd_state = #{cd_state}
				]]>
			</if>
			<if test="cd_barcode != null and cd_barcode != ''">
   				<![CDATA[
			 		and UPPER(ed.cd_barcode) LIKE UPPER('%'+#{cd_barcode}+'%')
				]]>
			</if>
			<if test="dept_CS != null and dept_CS != ''">
				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{dept_CS}+'%'
							]]>
					</when>
					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{dept_CS}
						]]>
					</otherwise>
				</choose>
			</if>
			<!-- <if test="file_title != null and file_title != ''">
   				<![CDATA[
			 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if> -->
			<if test="duty_dept_id != null and duty_dept_id != ''">

				<choose>
					<when test="chooseChildDept=='yes'">
   						<![CDATA[
			 				and dp.dept_cs like #{duty_dept_id}+'%'
							]]>
					</when>
					<otherwise>
   						<![CDATA[
			 				and dp.dept_cs = #{duty_dept_id}
						]]>
					</otherwise>

				</choose>
			</if>
			<if test="create_type != null and create_type != ''">
   				<![CDATA[
			 		and ed.create_type = #{create_type}
				]]>
			</if>
			<if test="dept_ids != null and dept_ids != ''">
				and ed.duty_dept_id in
				<foreach item="item" index="index" collection="dept_ids"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="expire_status ==0">
   				<![CDATA[
			 		and (ed.expire_time >= #{coming_expire_time} or ed.expire_time is null)
				]]>
			</if>
			<if test="expire_status ==1">
   				<![CDATA[
			 		and ed.expire_time <= #{expire_time} 
				]]>
			</if>
			<if test="expire_status ==2">
   				<![CDATA[
			 		and (ed.expire_time > #{expire_time} and ed.expire_time < #{coming_expire_time})
				]]>
			</if>
			<!-- <if test="entity_status ==0">
   				<![CDATA[
			 		and ed.event_code like 'single_print%'
				]]>
			</if>
			<if test="entity_status ==1">
   				<![CDATA[
			 		and ed.event_code not like 'single_print%'
				]]>
			</if> -->
		</trim>
		<!-- <choose>
  			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
   			</when>	
  			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
   			</when>	
   			<otherwise>
   				<![CDATA[
			 		order by ed.BURN_TIME desc
				]]>
   			</otherwise>			
  		</choose>
  		order by ed.BURN_TIME desc -->
	</select>	
	<update id="updatePaperOutputConfidentialNumByEventCarryoutId" parameterType="map">
		<![CDATA[
			update entity_paper 
			set output_confidential_num = #{output_confidential_num},
			paper_state = 0,job_code=null
			where paper_barcode = (select barcode from event_carryout ec where ec.id=#{id})
		]]>
	</update>
	<update id="updateCDOutputConfidentialNumByEventCarryoutId" parameterType="map">
		<![CDATA[
			update entity_cd 
			set output_confidential_num = #{output_confidential_num},
			cd_state = 0,job_code=null	 
			where cd_barcode = (select barcode from event_carryout ec where ec.id=#{id})
		]]>
	</update>
	<update id="updateJobProcessByJobcode" parameterType="string">
		<![CDATA[
			update job_process set send_way=null,output_undertaker=null,carryout_user_iidds=null,carryout_user_names=null where job_code=#{job_code}
		]]>
	</update>
	<update id="updateNeedMergeEntity" parameterType="map">
		<![CDATA[
			update entity_paper set 
			merge_code = #{merge_code},
			merge_state = #{merge_state},
			paper_state=#{paper_state} 
			where paper_barcode in 
		]]>
		<foreach item="item" index="index" collection="barcodes" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
	<select id="getMergePaperList" resultType="entitypaper" parameterType="map">
		<![CDATA[
			select distinct ed.*,sus.seclv_name,dp.dept_cs
			 from entity_paper ed 
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and ed.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
				<![CDATA[
					and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
				<![CDATA[
					and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="mergecode_print != null and mergecode_print != ''">
				<![CDATA[
					and ed.mergecode_print = #{mergecode_print}
				]]>
			</if>
			<if test="paper_barcode != null and paper_barcode != ''">
				<![CDATA[
					and ed.paper_barcode = #{paper_barcode}
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
				<![CDATA[
					and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if>
			<if test="mergecode_print != null and mergecode_print != ''">
				<![CDATA[
					and ed.mergecode_print = #{mergecode_print}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 			and ed.print_time >= #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
	  			<![CDATA[
			 		and ed.print_time <= #{end_time}
				]]>
			</if>
			<if test="merge_state != null and merge_state != ''">
				<![CDATA[
					and ed.merge_state = #{merge_state}
				]]>
			</if>
			<if test="merge_code != null and merge_code != ''">
				<![CDATA[
					and ed.merge_code = #{merge_code}
				]]>
			</if>
		</trim>
		and (ed.PID_barcode is null or ed.PID_barcode = '') order by ed.paper_id desc
	</select>
	<select id="getMergeAllPaperList" resultType="entitypaper" parameterType="map" 
		resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select distinct ed.*,sus.seclv_name,dp.dept_cs
			 from entity_paper ed 
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and ed.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
				<![CDATA[
					and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
				<![CDATA[
					and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="mergecode_print != null and mergecode_print != ''">
				<![CDATA[
					and ed.mergecode_print = #{mergecode_print}
				]]>
			</if>
			<if test="paper_barcode != null and paper_barcode != ''">
				<![CDATA[
					and ed.paper_barcode = #{paper_barcode}
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
				<![CDATA[
					and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if>
			<if test="mergecode_print != null and mergecode_print != ''">
				<![CDATA[
					and ed.mergecode_print = #{mergecode_print}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 			and ed.print_time >= #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
	  			<![CDATA[
			 		and ed.print_time <= #{end_time}
				]]>
			</if>
			<if test="merge_state != null and merge_state != ''">
				<![CDATA[
					and ed.merge_state = #{merge_state}
				]]>
			</if>
			<if test="merge_code != null and merge_code != ''">
				<![CDATA[
					and ed.merge_code = #{merge_code}
				]]>
			</if>
		</trim>
		and (ed.PID_barcode is null or ed.PID_barcode = '') order by ed.paper_id desc
	</select>
	<select id="getMergePaperApplySize" resultType="int"
		parameterType="map">
		<![CDATA[
			select count(1)
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select project_code,project_name from sys_project) sp on(ed.project_code = sp.project_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code) 
			 left join (select user_iidd, user_name from sec_user) ru on(ru.user_iidd = ed.retrieve_user_iidd)	
			 left join (select user_iidd, user_name from sec_user) du on(du.user_iidd = ed.destroy_user_iidd)
			 left join (select box_code, box_name from sys_recyclebox) sr on(sr.box_code = ed.retrieve_box_code)
			 left join (select event_code,keyword_content,print_type from event_print) ep on (ep.event_code = ed.event_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ = 'MERGE_ENTITY') act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )  
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
	</select>
	<select id="getMergePaperApplyList" resultType="entitypaper" parameterType="map" resultSetType="SCROLL_SENSITIVE">
		<![CDATA[
			select ed.*,sus.seclv_name,jp.jobtype_code, jp.job_status 
			 from entity_paper ed
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join (select job_code,jobtype_code,job_status from job_process) jp on(ed.job_code = jp.job_code)
			 left join (select dept_id, dept_name, dept_cs from sec_dept) dp on(ed.duty_dept_id = dp.dept_id)			
			 where exists 
             (
                  select text_ from 
			      (
				      select text_,PROC_INST_ID_ from act_hi_varinst where name_ = 'job_code' 
			      ) ahc1 
			      where exists
			      (
			          select act_h.proc_inst_id_ from (select proc_inst_id_ from act_hi_varinst where name_ ='jobType_code' and text_ = 'MERGE_ENTITY') act_h  
			          right join ((select proc_inst_id_ from act_hi_taskinst where name_='userApply' and  assignee_ = #{user_iidd})) act_t on act_t.proc_inst_id_ = act_h.proc_inst_id_ 
				      where ahc1. proc_inst_id_ = act_h.proc_inst_id_ 
			      )
			 and ed.job_code = ahc1.text_  
             )
		]]>
		<if test="seclv_code != null and seclv_code != ''">
  				<![CDATA[
		 		and ed.seclv_code = #{seclv_code}
			]]>
		</if>
		<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 		and ed.print_time >= #{start_time}
			]]>
		</if>
		<if test="end_time != null and end_time != ''">
  				<![CDATA[
		 		and ed.print_time <= #{end_time}
			]]>
		</if>
		<if test="paper_barcode != null and paper_barcode != ''">
  				<![CDATA[
		 		and UPPER(ed.paper_barcode) LIKE UPPER('%'+#{paper_barcode}+'%')
			]]>
		</if>
		<if test="file_title != null and file_title != ''">
  			<![CDATA[
		 		and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
			]]>
		</if>
		<if test="job_status != null and job_status != ''">
 			<![CDATA[
		 		and jp.job_status = #{job_status}
			]]>
		</if>
		<if test="paper_state != null and paper_state != ''">
  			<![CDATA[
		 		and ed.paper_state = #{paper_state}
			]]>
		</if>
		<choose>
			<when test="retrieve_time_sortable">
   				<![CDATA[
			 		order by ed.retrieve_time desc
				]]>
			</when>
			<when test="destroy_time_sortable">
   				<![CDATA[
			 		order by ed.destroy_time desc
				]]>
			</when>
			<otherwise>
   				<![CDATA[
			 		order by ed.print_time desc
				]]>
			</otherwise>
		</choose>
	</select>
	<update id="updateMergeCodeState" parameterType="string">
		<![CDATA[
			update entity_paper set mergecode_print=1 where paper_barcode =#{mergecode_print} 	
		]]>
	</update>
	<select id="getMergePaperSize" resultType="int" parameterType="map">
		<![CDATA[
			select count(distinct ed.paper_barcode) 
			 from entity_paper ed 
			 left join sec_user_seclv sus on(ed.seclv_code=sus.seclv_code)
			 left join sec_dept dp on(ed.duty_dept_id = dp.dept_id)	
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="user_iidd != null and user_iidd != ''">
				<![CDATA[
					and ed.user_iidd = #{user_iidd}
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
				<![CDATA[
					and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="seclv_code != null and seclv_code != '' and seclv_code != 0 ">
   				<![CDATA[
			 		and ed.seclv_code = #{seclv_code}
				]]>
			</if>
			<if test="dept_id != null and dept_id != ''">
				<![CDATA[
					and ed.dept_id = #{dept_id}
				]]>
			</if>
			<if test="mergecode_print != null and mergecode_print != ''">
				<![CDATA[
					and ed.mergecode_print = #{mergecode_print}
				]]>
			</if>
			<if test="paper_barcode != null and paper_barcode != ''">
				<![CDATA[
					and ed.paper_barcode = #{paper_barcode}
				]]>
			</if>
			<if test="file_title != null and file_title != ''">
				<![CDATA[
					and UPPER(ed.file_title) LIKE UPPER('%'+#{file_title}+'%')
				]]>
			</if>
			<if test="mergecode_print != null and mergecode_print != ''">
				<![CDATA[
					and ed.mergecode_print = #{mergecode_print}
				]]>
			</if>
			<if test="start_time != null and start_time != ''">
  				<![CDATA[
		 			and ed.print_time >= #{start_time}
				]]>
			</if>
			<if test="end_time != null and end_time != ''">
	  			<![CDATA[
			 		and ed.print_time <= #{end_time}
				]]>
			</if>
			<if test="merge_state != null and merge_state != ''">
				<![CDATA[
					and ed.merge_state = #{merge_state}
				]]>
			</if>
			<if test="merge_code != null and merge_code != ''">
				<![CDATA[
					and ed.merge_code = #{merge_code}
				]]>
			</if>
		</trim>
		and (ed.PID_barcode is null or ed.PID_barcode = '')
	</select>
	
	<!-- 更新接收人和接收单位 -->
	<update id="updateSendByBarcode" parameterType="map">
		<![CDATA[
		update job_process set output_user_name = #{update_user_name}, output_dept_name = #{update_dept_name} 
		where job_code=#{job_code}
		]]>
	</update>
</mapper>  